<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.49 Maintainer: sedef Status: wip -->
<!-- CREDITS: tpug -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Giriş</title>

  <sect1 xml:id="intro-whatis">
   <title>PHP nedir?</title>
   <para>
    <acronym>PHP</acronym> (açılımı "PHP: Hypertext
    Preprocessor") geniş bir kitle tarafından kullanılan,
    özellikle web üzerinde geliştirme için tasarlanmış bir betik dilidir.
    PHP kodu HTML içine gömülebilir biçimde tasarlanmıştır.
   </para>
   <para>
    Cevap basit gözükebilir, ama tam olarak ne anlama gelmektedir? Bir örnek:
   </para>
   <para>
    <example>
     <title>Giriş örneği</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Örnek</title>
    </head>
    <body>

        <?php
        echo "Merhaba, ben bir PHP betiğiyim!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>

    Bir PHP betiğinin (scriptinin) Perl ya da C gibi dillerden ne kadar farklı bir yapıda olduğuna dikkat edin.
    HTML kodu yaratmak için bir sürü kod yazacağınıza, istediğiniz işi yapan bir PHP kodu yazıp onu
    HTML kodunun içine gömüyorsunuz (bu örnekte, yapılan iş ekrana yazı yazmak).
    PHP kodu <link linkend="language.basic-syntax.phpmode">özel başlangıç ve bitiş etiketleri</link> arasına yazılır.
    Bu etiketler "PHP kipine" rahatlıkla girip çıkabilmenizi sağlarlar.
   </para>
   <para>
   PHP&apos;yi Javascript gibi kullanıcı tarafında çalışan dillerden ayıran,
   sunucu tarafında çalıştırılıyor olmasıdır. Yukardaki örnekteki kodu
   kendi sunucunuzda çalıştırırsanız, sitenize bağlanan kullanıcılar kodu
   göremeyecekler ve müdahale edemeyecekler, yalnızca sonucu görebileceklerdir.
   Dilerseniz web sunucunuzu bütün HTML dosyalarınızı PHP dosyası olarak görüp
   işleyecek hale bile getirebilirsiniz. Buna rağmen kullanıcılar sizin gerçekte
   sunucu taraflı bir uygulama kullandığınızı fark edemeyebilirler.
   </para>
   <para>
    PHP kullanmanın en güzel yanlarından biri, yeni kullanıcılar için öğreniminin oldukça
    kolay olması ve aynı zamanda profesyonel kullanıcılar için ileri seviyede
    özellikler içermesidir. PHP&apos;nin uzun özellikler listesini okumaktan korkmayın.
    Kısa sürede PHP ile programlamaya başlayabilir ve birkaç saat içersinde
    basit programlar yazmaya başlayabilirsiniz.
   </para>
   <para>
   PHP&apos;nin gelişimi sunucu-taraflı programlamaya odaklanmışsa da, çok daha fazlasını
   yapmanıza olanak tanıyan araçlara da sahiptir.
   <link linkend="intro-whatcando">PHP neler yapabilir?</link> bölümünden
   bu araçlar hakkında daha fazla bilgiye ulaşabilirsiniz. Eğer yalnızca web programlama
   ile ilgileniyorsanız, <link linkend="tutorial">başlangıç eğitmeni</link> bölümünden
   devam edebilirsiniz.
   </para>
  </sect1>

  <sect1 xml:id="intro-whatcando">
   <title>PHP neler yapabilir?</title>
   <para>Her şeyi. PHP temel olarak sunucu-taraflı programlamaya odaklanmıştır,
   bu nedenle CGI uygulamalarının yaptığı her şeyi, örneğin formdan veri toplama,
   dinamik sayfa içeriği yaratma, ya da çerez alıp gönderme gibi işlemleri yapabilirsiniz.
   Ancak PHP bunlardan çok daha fazlasını yapabilecek kapasitededir.
   </para>
   <para>
    PHP betiklerinin kullanıldığı üç temel alan vardır.
    <itemizedlist>
     <listitem>
      <simpara>
      Sunucu-taraflı programlama. Bu PHP için en geleneksel ve en temel olan alandır.
      Sunucu-taraflı programlama için üç şeye sahip olmanız gerekir. PHP motoru (CGİ ya da sunucu modülü),
      bir web sunucu ve bir web tarayıcısı. Web sunucusunu PHP&apos;den anlar şekilde kurmanız
      ve çalıştırmanız gerekir. PHP uygulamasının çıktısına web tarayıcısı üzerinden erişebilirsiniz.
      <link linkend="install">Kurulum bilgileri</link> bölümünden bununla ilgili daha fazla bilgiye ulaşabilirsiniz.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      Komut satırı uygulamaları. Bir PHP uygulamasını komut satırından hiçbir sunucu ya da tarayıcı uygulama
      kullanmadan çalıştırabilirsiniz. Burada tek ihtiyacınız olan PHP motorudur. Bu tip kullanım cron
      üzerinden (Windows eşdeğeri görev yöneticisi) düzenli çalıştırılan işlemler ya da basit metin-işlem
      görevleri için idealdir. <link linkend="features.commandline">PHP&apos;nin komut satırında kullanımı</link>
      bölümünden daha detaylı bilgiye ulaşmanız mümkün.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      İstemci tarafında çalışan grafik arayüze sahip uygulamalar.
      PHP için görsel uygulamaların yazılabileceği en iyi dil diyemeyiz, ancak PHP&apos;yi iyi biliyorsanız
      ve PHP&apos;nin birtakım ileri seviye özelliklerini kendi istemci taraflı uygulamalarınızda
      kullanmak istiyorsanız, PHP-GTK eklentisini bu tip programlar yazmak için kullanabilirsiniz.
      Bu şekilde platformdan bağımsız uygulamalar yazma şansına da sahip olmuş olacaksınız.
      PHP-GTK, PHP için bir eklentidir ve ana dağıtımda yer almıyor.
      PHP-GTK ilginizi çektiyse, <link xlink:href="&url.php.gtk;">kendi web sitesini</link> ziyaret edebilirsiniz.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
   PHP bütün büyük işletim sistemlerinde, Linux, birçok Unix türevi (HP-UX, Solaris, OpenBSD vb.),
   Microsoft Windows, Mac OS X, RİSC OS dahil olmak üzere çeşitli platformlarda çalışabilir.
   PHP benzer biçimde bugün yaygın biçimde kullanılan web sunucularının büyük kısmını destekler.
   Bunlara Apache, Microsoft IIS, Microsoft PWS, Netscape ve iPlanet Sunucuları,
   Oreilly Website Pro, Caudium, Xitami, OmniHTTPD ve daha birçok sunucuyu örnek gösterebiliriz.
   Bu sunucuların çoğunluğunda PHP modül olarak kullanılabilir,
   geri kalanlarında da CGI standardı kullanılarak PHP bir CGI işleyici olarak çalıştırılabilir.
   </para>
   <para>
    Sonuç olarak, PHP ile işletim sistemi ve web sunucusu seçme özgürlüğüne sahipsiniz.
    Dahası, hangi programlama yöntemini kullanacağınıza, fonksiyonel yaklaşımı mı
    yoksa nesne yönelimli yaklaşımı mı yoksa her ikisini birden mi kullanacağınıza kendiniz karar verebilirsiniz.
    Bütün OOP (nesne yönelimli programlama) özellikleri PHP&apos;nin şu andaki sürümünde
    varolmasa da, birçok kod kütüphanesi ve büyük uygulama (PEAR kütüphanesi dahil) OOP kullanılarak yazılmıştır.
   </para>
   <para>
   PHP yalnızca HTML çıktı üretmekle sınırlı değildir. PHP&apos;nin yetenekleri arasında resim çıktısı üretebilme,
   PDF oluşturabilme ve hatta Flash filmleri yaratabilme (libswf ve Ming kullanarak) bulunmaktadır.
   Aynı şekilde XHTML ya da XML gibi her tür metin tabanlı dosyayı yaratabilmeniz mümkündür.
   PHP bu dosyaları otomatik olarak yaratabilir ve ekrana yazdırmak haricinde sizin için
   dosya sisteminde saklayabilir, böylece dinamik içeriğiniz için sunucu-taraflı bir depo sistemini kullanımınıza sunabilir.
   </para>
   <para>
   PHP&apos;nin en güçlü ve en çok üstünde durulan özelliklerinden biri, sahip olduğu geniş ve gelişmiş veritabanı desteğidir.
   PHP ile veritabanı bağlantılı web sayfaları yaratmak son derece basittir. Aşağıda desteklenen veritabanlarının listesi bulunmaktadır:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (salt-okunur)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 ve OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>SQLite</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Bunların haricinde DBX adı verilen uzantı ile farklı veritabanları için aynı kodu
    kullanarak kodlama yapabilirsiniz. PHP, ek olarak ODBC&apos;yi, yani Açık Veritabanı Bağlantı standardını
    destekler, bu şekilde ODBC&apos;yi destekleyen tüm veritabanları ile iletişim kurabilirsiniz.
   </para>
   <para>
   PHP, farklı hizmetlerle LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM
   (Windows için) ve daha sayısız protokol aracılığıyla konuşabilecek bir altyapıya da sahiptir.
   Hazır modüllerin haricinde ham ağ soketleri açıp bu soketler üzerinden istediğiniz bütün
   protokollerle çalışabilirsiniz. PHP, WDDX üzerinden sanal olarak web üzerinde hangi dilde
   yazılmış olursa olsun tüm uygulamalarla haberleşebilir. Ayrıca Java nesnelerinin yaratılabilmesi
   ve saydam (transparent) biçimde PHP nesneleri olarak kullanılabilmeleri önemli bir diğer özelliktir.
   Uzaktaki nesnelere erişim için CORBA uzantısı, yine PHP&apos;nin sahip olduğu özellikler arasındadır.
   </para>
   <para>
   PHP oldukça faydalı doküman işleme özelliklerine sahiptir. Bu yelpaze Genişletilmiş POSİX ya da
   Perl düzenli ifade (regular expressions) komutlarından XML dosyalarını okumaya kadar uzanır.
   XML dosyalarının okunması ve erişimi için SAX ve DOM standartlarını destekler.
   XSLT uzantısı ile XML dokümanlarının biçimlendirilmesi yapılabilir. PHP 5 tüm XML uzantılarını
   libxml2 tabanında tek bir standartta toplamış ve SimpleXML ile XMLReader desteğini bünyesine
   katarak sunduğu imkan yelpazesini genişletmiştir.
   </para>
   <para>
   PHP&apos;yi e-ticaret alanında kullanırken, Cybercash ödeme sistemi, CyberMUT, VeriSign Payflow
   Pro ve MCVE fonksiyonlarını kullanabilir ve çevrimiçi ödeme uygulamalarınızı gerçekleştirebilirsiniz.
   </para>
   <para>
   Bunların dışında, mnoGoSearch arama motoru, IRC ağ geçidi uzantıları, birçok sıkıştırma aracı (gzip, bz2) için yardımcı araçlar,
   takvim araçları, dil çeviri fonksiyonları yine PHP&apos;nin sunmakta olduğu ilginç uzantılardan bazılarıdır.
   </para>
   <para>
   Sizin de görebildiğiniz gibi bu sayfa PHP&apos;nin sunabileceği bütün özellikleri ve faydaları anlatabilmek
   için yeterli değil. <link linkend="install">PHP kurulumu</link> bölümünde ve <link linkend="funcref">fonksiyon başvuru kaynağı</link>nda
   listelenen uzantıların başlangıç bölümlerindeki açıklamalardan her bir uzantı için daha fazla bilgiye ulaşabilirsiniz.
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
