<?xml version="1.0" encoding="iso-8859-9"?>
<!-- $Revision: 1.1 $ -->
 <chapter id="tutorial">
  <title>Basit bir eðitmen</title>

  <para>
  Bu bölümde PHP ile ilgili en temel bilgileri kýsa ve basit bir eðitmen
  üzerinde anlatmak istiyoruz. Bu metin yalnýzca PHP ile dinamik web sayfasý
  geliþtirmeyi ele alýr, ancak PHP yalnýzca web sayfasý yaratmakla
  sýnýrlý deðildir. Daha fazla bilgi için <link linkend="intro-whatcando">PHP
  neler yapabilir</link> bölümünü inceleyebilirsiniz.
  </para>
  <para>
  PHP-etkin web sayfalarý normal HTML sayfalarý gibidir ve bu sayfalarý
  normal HTML sayfalarý için kullandýðýnýz yöntemlerle yaratabilir ve
  düzenleyebilirsiniz.
  </para>

  <sect1 id="tutorial.requirements">
   <title>Neye ihtiyacým var?</title>
   <para>
   Bu eðitmen süresince web sunucunuzun PHP desteðinin etkinleþtirilmiþ
   olduðunu ve tüm <filename>.php</filename> uzantýlý dosyalarýn
   PHP tarafýndan kontrol ediliyor olduðunu öngöreceðiz. Birçok sunucuda,
   bu uzantý PHP dosyalarý için öntanýmlý dosya uzantýsýdýr, ancak emin
   olmak için sunucunuzun yöneticisinden doðru bilgiyi edinebilirsiniz.
   Sunucunuz PHP&apos;yi destekliyorsa, hiçbir þey yapmanýza gerek
   yoktur. Yalnýzca <filename>.php</filename> uzantýlý dosyalarýnýzý
   yaratmanýz ve web klasörünüze koymanýz, sunucunuzun bu dosyayý
   sizin için otomatik olarak iþleme koymasý için yeterli olacaktýr.
   Herhangi bir þeyi derlemeniz ya da ekstra bir araç kurulumu yapmanýz
   gerekmemektedir. PHP-etkin dosyalarý yeni bir tür HTML dosyasý olarak
   kafanýzda canlandýrabilirsiniz. Düþünün ki, artýk HTML dosyasýnýn içine
   sihirli birtakým etiketler koyabiliyor ve bu etiketler sayesinde istediðiniz
   her tür iþlemi gerçekleþtirebiliyorsunuz. Birçok web barýndýrma sitesi
   PHP desteði sunmaktadýr, ancak sizinki sunmuyorsa, <ulink url="&url.php.links;">
   PHP Baðlantýlarý</link> bölümünden PHP hizmeti sunan web barýndýrma
   sitelerinin adreslerine ulaþabilirsiniz.
      </para>
   <para>
   Diyelim ki çok deðerli olan band geniþliðinizi boþa harcamamak ve kendi
   sisteminizde yerel olarak geliþtirme yapmak istiyorsunuz. Bu durumda, 
   <ulink url="&url.apache;">Apache</ulink> gibi bir web sunucusunu ve elbette
   <ulink url="&url.php.downloads;">PHP</ulink>&apos;yi
   indirmeniz ve kurmanýz gerekmektedir. Bu ikilinin yanýnda, <ulink url="&url.mysql.docs;">MySQL</ulink>
   gibi bir veritabanýný da indirip kurmanýz iyi olacaktýr.
   </para>
   <para>
   Bu üçlüyü kendi baþýnýza kurabilir ya da daha basit bir yol izleyebilirsiniz. Kýlavuzumuz
   <link linkend="install">PHP için kurulum bilgileri</link> (web sunucunuzun
   halihazýrda kurulu olduðunu öngörür) bölümüne sahiptir. PHP&apos;yi kendiniz
   kurmakta sorun yaþýyorsanýz, sorularýnýzýn çözümü için <ulink url="&url.php.mailing-lists;">kurulum
    posta listesi</ulink>&apos;ne baþvurabilirsiniz. Daha basit bir yoldan gitmek istiyorsanýz,
    iþletim sisteminize uygun olan <ulink url="&url.installkits;">ön yapýlandýrýlmýþ paket</ulink>i
    seçebilir ve tüm bu araçlarý birkaç fare týklamasýyla otomatik olarak yükleyebilirsiniz.
    MacOSX, Linux ve Windows dahil olmak üzere birçok iþletim sistemine PHP destekli bir web
    sunucusu kurmak oldukça kolaydýr. Linux üzerinde, <ulink url="&url.rpmfind;">rpmfind</ulink>
    ve <ulink url="&url.rpmfind.pbone;">PBone</ulink> araçlarý RPM dosyalarýný bulmanýzda
    size yardýmcý olacaklardýr. Debian için ise <ulink url="&url.apt-get;">apt-get</ulink>
    bölümünü ziyaret edebilirsiniz.
      </para>
  </sect1>

  <sect1 id="tutorial.firstpage">
   <title>Ýlk PHP-etkin sayfanýz</title>
   <para>
   <filename>hello.php</filename> isimli bir dosya yaratýn ve web sunucunuzun
   kök klasörüne (<varname>DOCUMENT_ROOT</varname>) aþaðýdaki içerikle
   beraber kaydedin:
   </para>
   <para>
    <example>
     <title>Ýlk PHP betiðimiz: <filename>hello.php</filename></title>
     <programlisting role="php">
<![CDATA[
<html>
 <head>
  <title>PHP Test</title>
 </head>
 <body>
 <?php echo '<p>Merhaba Dünya</p>'; ?>
 </body>
</html>
]]>
     </programlisting>
     <simpara>
     Tarayýcýnýzý kullanarak web sunucunuzun URL adresine eriþebilirsiniz, adres
     bölümünün sonuna "/hello.php" eklemeniz yeterli olacaktýr. Yerel olarak geliþtirme
     yaparken bu URL <literal>http://localhost/hello.php</literal> ya da
     <literal>http://127.0.0.1/hello.php</literal> gibi bir þey olacaktýr, ancak
     bu web sunucusunun yapýlandýrma ayarlarýna baðlýdýr. Eðer her þey düzgün
     yapýlandýrýlmýþsa, bu dosya PHP tarafýndan iþlenecek ve aþaðýdaki çýktý
     tarayýcýnýza gönderilecektir:
     </simpara>
     <screen role="html">
<![CDATA[
<html>
 <head>
  <title>PHP Test</title>
 </head>
 <body>
 <p>Merhaba Dünya</p>
 </body>
</html>
]]>
     </screen>
    </example>
   </para>
   <para>
   Bu program gördüðünüz gibi son derece basit ve esasýnda böyle bir sayfa yaratmanýz için
   PHP&apos;ye gereksiniminiz yoktur. Görüntülenen: PHP&apos;nin 
   <function>echo</function> komutu kullanýlarak elde edilen <literal>Merhaba Dünya</literal>
   cümlesidir. Bu dosyanýn hiçbir þekilde <emphasis>çalýþtýrýlabilir ya da özel türde olmasýna ihtiyaç duyulmadýðýna</emphasis>
   dikkat edin. Sunucu dosyanýn PHP tarafýndan iþlenmesi gerektiðini bilir çünkü dosyaya ".php" uzantýsýný
   tanýmladýnýz. Sunucu bu uzantýya sahip dosyalarý PHP üzerinden geçirecek biçimde yapýlandýrýlmýþtýr.
   Bunu size birtakým özel etiketlerle birçok ilginç iþlem yapabilmenizi saðlayan bir tür HTML dosyasý
   olarak düþünebilirsiniz.
   </para>
   <para>
   Bu örneði denediyseniz ve hiçbir çýktý alamadýysanýz, sizden dosyayý indirmenizi
   istediyse ya da dosyanýn tüm içeriðini metin olarak ekranda gördüyseniz, büyük ihtimalle
   sunucunuzun PHP desteði etkinleþtirilmemiþtir ya da sunucunuz doðru yapýlandýrýlmamýþtýr.
   Yönetinizden kýlavuzdaki <link linkend="install">Kurulum</link> bölümünü
   kullanarak PHP&apos;yi etkinleþtirmesini rica edebilirsiniz. Yerel olarak geliþtirme yapýyorsanýz,
   kurulum bölümünü okuyarak herþeyin doðru yapýlandýrýldýðýndan emin olun. Size çýktýyý
   saðlayan sunucudaki dosyaya http üzerinden eriþmeye çalýþýp çalýþmadýðýnýzý kontrol edin.
   Dosyayý direk olarak kendi dosya sisteminizden çaðýrýyorsanýz, PHP tarafýndan iþlenmeyecektir.
   Sorun her þeye raðmen devam ediyorsa, <ulink url="&url.php.support;">PHP desteði alma</ulink>
   yöntemlerini kullanmakta tereddüt etmeyin.
   </para>
   <para>
   Bu örneðin amacý özel PHP etiketi formatýný göstermektir. Örnekte
   <literal>&lt;?php</literal> ile PHP etiketinin baþlangýcýný belirledik.
   Sonra PHP komutunu yazdýk ve kapanýþ etiketi <literal>?&gt;</literal>
   kullanarak PHP kipinden çýktýk. Bir HTML dosyasýnda bu yöntemi kullanarak
   istediðiniz yerde PHP kipine girip çýkabilirsiniz. Daha fazla bilgi için, kýlavuzun
   <link linkend="language.basic-syntax">temel PHP sözdimi</link> bölümünü
   okuyabilirsiniz.
   </para>
   
   <note>
    <title>Metin Düzenleyiciler Hakkýnda</title>
    <para>
    PHP dosyalarýný yaratabileceðiniz, düzenleyebileceðiniz ve yönetebileceðiniz
    birçok metin düzenleyici ve Bütünleþik Geliþtirme Ortamý (IDE) bulunmaktadýr.
    Bu araçlarýn bir kýsmý <ulink url="&url.phpeditorlist;">PHP Düzenleyicileri
     Listesi</ulink> bölümünde listelenmiþtir. Sizin önermek istediðiniz bir düzenleyici
     varsa, lütfen yukardaki sayfayý ziyaret edin ve sayfa idarecisinden önermek istediðiniz
     düzenleyiciyi bu listeye eklemesini rica edin. Söz dizimi aydýnlatmasý olan bir düzenleyici
     size yardýmcý olabilir.
    </para>
   </note>
   
   <note>
    <title>Kelime Ýþlemciler Hakkýnda</title>
    <para>
    StarOffice Writer, Microsoft Word ve Abiword gibi kelime iþlemciler PHP dosyalarýný
    düzenlemek için uygun deðillerdir. Eðer bu test betiði için bunlardan birini kullanmak
    istiyorsanýz, dosyanýn <emphasis>salt metin</emphasis> olarak kaydedildiðinden
    emin olun, aksi takdirde PHP&apos;nin betiði okumasý ve çalýþtýrmasý mümkün olmayacaktýr.
    </para>
   </note>
   
   <note>
    <title>Windows Not Defteri Hakkýnda</title>
    <para>
    PHP betiklerinizi Windows Not Defteri ile yazýyorsanýz, dosyalarýnýzýn .php uzantýsý
    ile kaydedildiðinden emin olmalýsýnýz (Notepad birazdan bahsedeceðimiz önlemleri
    almadýðýnýz takdirde dosyalarýn sonuna otomatik olarak .txt uzantýsý ekler).
    Dosyayý kaydetmek istediðinizde, sizden dosyanýz için bir isim belirtmeniz istenecektir.
    Dosya ismi olarak týrnak içinde (örn. "<filename>hello.php</filename>") yazýn.
    Alternatif olarak, 'Kaydet' iletiþim kutusunun içindeki &apos;Metin Belgeleri&apos; açýlýr menüsüne
    týkladýktan sonra buradaki deðeri "Tüm Dosyalar" olarak deðiþtirin. Artýk dosya isminizi
    týrnak iþareti kullanmadan yazabilirsiniz.
    </para>
   </note>
  
  <para>
   Artýk çalýþýr bir PHP betiðini baþarýyla yarattýðýnýza göre, PHP betiklerinin
   en ünlüsünü yaratma zamaný geldi demektir! <function>Phpinfo</function>
   fonksiyonunu çalýþtýracaðýz ve sisteminizle ve yapýlandýrmanýzla ilgili
   <link linkend="language.variables.predefined">öntanýmlý deðiþkenler</link>,
   yüklü PHP modülleri ve <link linkend="configuration">yapýlandýrma</link>
   ayarlarý gibi konularda faydalý birçok bilgiye ulaþacaðýz. Bu önemli bilgiler için
   biraz vakit ayýrmanýzý ve bunlarý incelemenizi öneririz.
   </para>
   <para>
    <example>
     <title>PHP ile sistem bilgisine ulaþmak</title>
     <programlisting role="php">
<![CDATA[
<?php phpinfo(); ?>
]]>
     </programlisting>
    </example>
   </para>
  </sect1>

  <sect1 id="tutorial.useful">
   <title>Ýþe yarar bir þey</title>
   <para>
   Þimdi daha iþe yarar bir þey yapalým. Kullanýcýnýzýn hangi tarayýcýyý
   kullandýðýný tespit edelim. Bunun için, HHTP isteði ile birlikte kullanýcýnýzýn
   tarayýcý tarafýndan gönderilen karakter dizisi (string) deðerini inceleyeceðiz.
   Bu deðer bir <link linkend="language.variables">deðiþken</link> içinde
   depolanmýþtýr. Deðiþkenler PHP&apos;de her zaman dolar iþareti ile baþlar.
   Bizim þu an için ilgilendiðimiz deðiþken <varname>$_SERVER[&apos;HTTP_USER_AGENT&apos;]</varname>
   deðiþkenidir.
   </para>
   <note>
    <para>
     <link linkend="reserved.variables.server">$_SERVER</link> özel saklanmýþ
     bir PHP deðiþkenidir. Bu deðiþken tüm web sunucusu bilgilerini içerir. Autoglobal
     (ya da superglobal - süper evrensel) olarak da bilinir. Kýlavuzdaki 
     <link linkend="language.variables.superglobals">Superglobals</link>
     bölümünden bu konu ile ilgili daha fazla bilgiye ulaþabilirsiniz. Bu özel deðiþkenler
     PHP <ulink url="&url.php.release4.1.0;">4.1.0</ulink> sürümü ile birlikte
     kullanýlmaya baþlanmýþtýr. Daha öncesinde, <varname>$HTTP_SERVER_VARS</varname>
     gibi eski <varname>$HTTP_*_VARS</varname> dizileri (array) kullanýlmaktaydý.
     Ömrünü doldurmuþ olsa da, bu eski tip deðiþkenler hala mevcuttur. (<link linkend="tutorial.oldcode">Eski kod</link>
     bölümüne de bakýnýz.)
    </para>
   </note>
   <para>
   Bu deðiþkeni görüntülemek için yapmanýz gereken basitçe:
   </para>
   <para>
    <example>
    <title>Bir deðiþkeni yazdýrmak (Dizi öðesi)</title>
    <programlisting role="php">
<![CDATA[
<?php echo $_SERVER['HTTP_USER_AGENT']; ?>
]]>
    </programlisting>
    <para>
    Bu betikten alýnabilecek kýsa sonuç:
    </para>
    <screen role="html">
	Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
    </screen>
   </example>
   </para>
   <para>
   PHP&apos; birçok farklý deðiþken <link linkend="language.types">tipi</link>
   mevcuttur. Yukardaki örnekte bir <link linkend="language.types.array">dizi</link>ye
   ait bir öðeyi yazdýrdýk. Diziler çok kullanýþlý olabilirler.
   </para>
   <para>
    <varname>$_SERVER</varname> size PHP tarafýndan otomatik olarak saðlanan
    bir deðiþkendir. Kullaným kýlavuzunun 
    <link linkend="reserved.variables">Rezerve Deðiþkenler</link> bölümünden
    tümünün bir listesine ulaþabilirsiniz ya da önceki örnekte kullandýðýmýz
    <function>phpinfo</function> fonksiyonu ile üretilen çýktýya bakarak bütün
    listeye ulaþabilirsiniz.
   </para>
   <para>
   PHP etiketinin içine birden çok PHP komutu koyabilir ve tek bir echo komutundan
   daha fazlasýný yapan küçük kod bloklarý yaratabilirsiniz. Örneðin, Internet Explorer için
   bir kontrol yapmak istiyorsanýz þunu yapabilirsiniz:
   </para>
   <para>
    <example>
     <title><link linkend="language.control-structures">Kontrol yapýlarý 
     </link>nýn ve <link linkend="language.functions">fonksiyonlar</link>ýn kullanýmýna örnek</title>
     <programlisting role="php">
<![CDATA[
<?php
if (strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') !== FALSE) {
    echo 'Internet Explorer kullanmaktasýnýz.<br />';
}
?>
]]>
     </programlisting>
     <para>
     Bu betikten alýnabilecek örnek sonuç:
     </para>
     <screen role="html">
<![CDATA[
Internet Explorer kullanýyorsunuz.<br />
]]>
     </screen>
    </example>
   </para>
   <para>
   Nurada birkaç yeni kavramý devreye soktuk. Bir <link linkend="control-structures.if">if</link>
   komutumuz var. Eðer C dilinde kullanýlan temel sözdizimine aþinalýðýnýz varsa, bu kullaným
   size tanýdýk gelecektir. Aksi takdirde, giriþ düzeyinde bir PHP kitabý almanýz ve ilk birkaç bölümünü
   okumanýz ya da kýlavuzun <link linkend="langref">Dil Baþvuru Kaynaðý</link> bölümünü
   okumanýz faydalý olacaktýr. PHP kitaplarýnýn bir listesine <ulink url="&url.php.books;">&url.php.books;</ulink>
   adresinden ulaþabilirsiniz.
   </para>
   <para>
   Ýkinci devreye aldýðýmýz kavram <function>strpos</function> fonksiyonu ile yaptýðýmýz çaðrý oldu.
   <function>Strpos</function> fonksiyonu PHP içine yerleþik olan, bir karakter dizisini diðer karakter dizisinin
   içinde aramayý saðlayan bir fonksiyondur. Kendi durumumuzda biz <varname>$_SERVER[&apos;HTTP_USER_AGENT&apos;]</varname>
   (haystack - aramaya konu olan parça olarak da adlandýrýlýr) deðiþkeni içersinde <literal>&apos;MSIE&apos;</literal> (needle - aranan parça olarak da adlandýrýlýr)
   parçasýný aratmaktayýz. Aranan parça, aramaya konu olan parça içinde bulunursa, fonksiyon aramaya konu olan parçanýn baþlangýç noktasýna
   göreceli olarak aranan parçanýn bulunduðu noktanýn yerini döndürür. Aksi durumda, &false; döndürür. &false; döndürmezse, 
   <link linkend="control-structures.if">if</link> komutunun sonucu &true; olarak deðerlendirilir ve {köþeli parantezler} içindeki kod çalýþtýrýlýr.
   Aksi durumda kod çalýþtýrýlmaz. <link linkend="control-structures.if">If</link>, <link linkend="control-structures.else">else</link> gibi
   kontrol yapýlarýnýn ve <function>strtoupper</function> ve <function>strlen</function> gibi fonksiyonlarýn kullanarak siz kendiniz de benzer
   örnekler yaratabilirsiniz. Ýlgili her kýlavuz sayfasý ayný zamanda örnekler de içermektedir. Bu fonksiyonlarý nasýl kullanmanýz gerektiðinden
   emin deðilseniz, kýlavuzdaki <link linkend="about.prototypes">bir fonksiyon tanýmý nasýl okunur</link> ve <link linkend="language.functions">PHP fonksiyonlarý</link>
   bölümlerini okuyabilirsiniz.
   </para>
   <para>
   Bunu bir adým öteye taþýyabilir ve bir PHP bloðunun tam ortasýndayken bile PHP kipine nasýl girip çýkabileceðimize bakabiliriz:
   </para>
   <para>
    <example>
     <title>HTML ve PHP kiplerini karýþtýrmak</title>
     <programlisting role="php">
<![CDATA[
<?php
if (strpos($_SERVER['HTTP_USER_AGENT'], 'MSIE') !== FALSE) {
?>
<h3>strpos() false olmayan bir deðer döndürmelidir</h3>
<p>Internet Explorer kullanmaktasýnýz</p>
<?php
} else {
?>
<h3>strpos() false döndürmelidir</h3>
<p>Internet Explorer kullanmýyorsunuz</p>
<?php
}
?>
]]>
     </programlisting>
     <para>
     Bu betikten elde edilebilecek örnek sonuç:
     </para>
     <screen role="html">
<![CDATA[
<h3>strpos() false olmayan bir deðer döndürmelidir</h3>
<p>Internet Explorer kullanýyorsunuz</p>
]]>
     </screen>
    </example>
   </para>
   <para>
   Bir çýktý üretmek için PHP echo komutunu kullanmak yerine, PHP kipinden
   çýktýk ve sadece düz HTML gönderdik. Burada dikkat edilmesi gereken önemli
   nokta, betiðin mantýksal akýþýnýn deðiþmiyor olmasýdýr. <function>Strpos</function>
   fonksiyonundan edinilen sonuca göre HTML bloklarýndan yalnýzca biri görüntüleyiciye
   gönderilmektedir. Baþka bir deyiþle, bu iþleyiþ <literal>MSIE</literal> deðiþkeninin
   bulunup bulunmamasýna baðlýdýr.
   </para>
  </sect1>
   
  <sect1 id="tutorial.forms">
   <title>Form Kullanýmý</title>
   <para>
   PHP&apos;nin en güçlü özelliklerinden biri HTML formlarýna yaklaþým biçimidir.
   Bilinmesi gereken ilk önemli durum, form içindeki tüm elemanlar PHP tarafýndan
   otomatik olarak kullanýlabilir olacaktýr. Bu konu ile ilgili kýlavuzdaki
   <link linkend="language.variables.external">PHP&apos;nin dýþýndan gelen
   deðiþkenler</link> bölümünü okuyabilirsiniz. Örnek bir HTML formu:
   </para>
   <para>
    <example>
     <title>Örnek bir HTML formu</title>
     <programlisting role="html">
<![CDATA[
<form action="action.php" method="post">
 <p>Ýsminiz: <input type="text" name="isim" /></p>
 <p>Yaþýnýz: <input type="text" name="yas" /></p>
 <p><input type="submit" /></p>
</form>
]]>
     </programlisting>
    </example>
   </para>
   <para>
   Bu form ile ilgili özel hiçbir þey yoktur. Hiçbir özel etiket içermeyen düz bir
   HTML formudur. Kullanýcý formu doldurup gönder tuþuna bastýðýnda, 
   <filename>action.php</filename> sayfasý çaðrýlýr. Bu dosyaya aþaðýdakileri
   yazabiliriz:
   </para>
   <para>
    <example>
     <title>Formdan veri yazdýrmak</title>
     <programlisting role="php">
<![CDATA[
Merhaba <?php echo $_POST['isim']; ?>.
Siz <?php echo $_POST['yas']; ?> yaþýndasýnýz.
]]>
     </programlisting>
     <para>
     Bu betikten elde edilecek örnek çýktý:
     </para>
     <screen role="html">
<![CDATA[
Merhaba Ahmet. Siz 22 yaþýndasýnýz.
]]>
     </screen>
    </example>
   </para>
   <para>
   Yapýlan iþ oldukça açýk. <varname>$_POST[&apos;isim&apos;]</varname> deðiþkeni
   ve <varname>$_POST[&apos;yas&apos;]</varname> deðiþkeni PHP tarafýndan otomatik
   olarak yaratýldý. Daha önce <varname>$_SERVER</varname> autoglobal
   deðiþkenini kullanmýþtýk, yukarýda <link linkend="reserved.variables.post">$_POST</link>
   autoglobal deðiþkenini tanýmýþ olduk. Bu deðiþken POST yöntemi ile gönderilen tüm
   veriyi içermektedir. Formumuz için tanýmlý <emphasis>yöntem (method)</emphasis>in
   POST olduðuna dikkat edin. <emphasis>GET</emphasis> yöntemini kullanmýþ olsaydýk,
   form bilgilerimiz <link linkend="reserved.variables.get">$_GET</link> autoglobal
   deðiþkenine tanýmlanmýþ olacaktý. Bunlarýn haricinde, istemciden gelen verinin hangi kaynaktan
   geldiði sizin için önemli deðilse <link linkend="reserved.variables.request">$_REQUEST</link>
   autoglobal deðiþkenini de kullanabilirsiniz. Bu deðiþken GET, POST ve COOKIE verilerinin
   birleþiminden oluþur. Daha fazla bilgi için <function>import_request_variables</function>
   fonksiyonunu inceleyebilirsiniz.
   </para>
   <para>
   PHP içinde XForms öðelerini de kullanabilirsiniz, ancak baþlangýç aþamasýnda
   çok iyi desteklenen HTML formlarý sizin iþinizi görecektir. XForms ile çalýþmak yeni baþlayanlar
   için uygun olmasa da, ilginizi çekebilir. <link linkend="features.xforms">XForms ile elde edilen
   verilerin iþlenmesi</link> ile ilgili metinden bu konu ile ilgili daha fazla bilgiye ulaþabilirsiniz.
   </para>
  </sect1>

  <sect1 id="tutorial.oldcode">
   <title>PHP&apos;nin yeni sürümleri ile eski kod yapýsýný kullanmak</title>
   <para>
   PHP&apos; popüler bir betik dili olmasýyla birlikte, hazýr kullanabileceðiniz
   kodlar üreten birçok kamuya açýk depo ve kütüphane oluþturuldu. PHP geliþtiricileri
   geriye dönük uyumluluðu mümkün olduðunca korumaya çalýþtýlar, dolayýsýyla
   eski bir PHP sürümü ile birlikte yazýlmýþ bir PHP kodu hiçbir deðiþiklik yapýlmasýna
   gerek duyulmadan (ideal olarak) yeni PHP sürümleri ile çalýþabilir halde kaldý.
   Ancak pratikte, bazý deðiþikliklerin yapýlmasý gerekebilir.
    usually be needed.
   </para>
   <para>
   Eski kodlarý etkileyen yakýn geçmiþe ait iki önemli deðiþiklik aþaðýdaki gibidir:
    <itemizedlist>
     <listitem>
      <simpara>
      Eski <varname>$HTTP_*_VARS</varname> tipi deðiþkenler ömürlerini
      doldurdular (bu deðiþkenler bir fonksiyon ya da metod içersinde kullanýlmadan
      önce tanýmlanmalýydýlar). Takip eden 
       <link linkend="language.variables.superglobals">autoglobal dizileri</link>
       PHP&apos;nin <ulink url="&url.php.release4.1.0;">4.1.0</ulink> sürümü ile
       birlikte kullanýma açýlmýþtýr. 
       Bunlar: <varname>$_GET</varname>, <varname>$_POST</varname>, 
       <varname>$_COOKIE</varname>, <varname>$_SERVER</varname>, 
       <varname>$_FILES</varname>, <varname>$_ENV</varname>,
       <varname>$_REQUEST</varname> ve <varname>$_SESSION</varname>
       dizileridir. Daha eski, <varname>$HTTP_POST_VARS</varname> gibi
       <varname>$HTTP_*_VARS</varname> dizileri, PHP 3&apos;teki ayný kullaným
       biçimi ile mevcutturlar.
       &avail.register-long-arrays;
      </simpara>
     </listitem>
     <listitem>
      <simpara>
      Dýþ deðiþkenler artýk global kapsamda öntanýmlý olarak yaratýlmamaktadýrlar.
      Baþka bir deyiþle, PHP
       <ulink url="&url.php.release4.2.0;">4.2.0</ulink> sürümü ile birlikte &php.ini;
       içersindeki bir PHP direktifi olan
       <link linkend="ini.register-globals">register_globals</link>, öntanýmlý olarak
       <emphasis>off (kapalý)</emphasis>hale getirildi. Bu deðerlere eriþim için
       tercih edilen autoglobal dizi kullanýmý yönteminden yukarýda bahsettik. Eski
       betikler, kitaplar ve eðitmenler bu direktifin açýk olduðu kabul edilerek yazýlmýþ olabilir.
       Bu direktif açýk olduðunda, örneðin <literal>http://www.example.com/foo.php?id=42</literal>
       URL&apos;sinden gelen bir istek ile otomatik olarak <varname>$id</varname>
       deðiþkeni oluþturulur. Bu direktifin açýk ya da kapalý olduðuna bakýlmazsýzýn,
       <varname>$_GET[&apos;id&apos;]</varname> deðiþkeni yaratýlýr.
       </simpara>
     </listitem>
    </itemizedlist>
    Bu deðiþiklikler ile ilgili daha fazla bilgi için,
    <link linkend="language.variables.predefined">öntanýmlý deðiþkenler</link> bölümünden
    ve buradaki diðer baðlantýlardan faydalanabilirsiniz.
   </para>
  </sect1>
  
  <sect1 id="tutorial.whatsnext">
   <title>Sonraki adým nedir?</title>
   <para>
   Sahip olduðunuz yeni bilgilerle kýlavuzun birçok bölümünü anlayabilir
   ve örnek arþivinde bulunan birçok betiði okuyabilir hale gelmiþ olmalýsýnýz.
   <ulink url="&url.php.links;">&url.php.links;</ulink> baðlantýsýndan
   inceleyebileceðiniz baþka örneklere ulaþabilirsiniz.
   </para>
   <para>
   PHP ile neler yapabileceðiniz ile ilgili baþka sunumlara ulaþmak isterseniz,
   <ulink url="&url.php.conf;">&url.php.conf;</ulink> ve
   <ulink url="&url.php.talks;">&url.php.talks;</ulink>
   adreslerindeki PHP Konferans Materyalleri Siteleri&apos;ni ziyaret edebilirsiniz.
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
