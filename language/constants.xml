<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.54 Maintainer: nilgun Status: ready -->
<!-- CREDITS: tpug, sezer -->
 <chapter xml:id="language.constants" xmlns="http://docbook.org/ns/docbook">
  <title>Sabitler</title>

  <simpara>
    Bir sabit basit bir değerin betimleyicisidir (ismidir). İsminden de
    anlaşılacağı gibi, betiğin çalışması sırasında bu değer değiştirilemez
    (aslında birer sabit olmayan <link
    linkend="language.constants.predefined">sihirli sabitler</link>
    hariç). Sabitler öntanımlı olarak büyük-küçük harf duyarlıdır.
    Geleneksel olarak, sabit isimleri daima büyük harfle yazılır.
  </simpara>
  <para>
    Bir sabite verilen isim PHP'de varolan diğer tüm isimlerle aynı
    kurallara tabidir. Geçerli bir sabit ismi bir harfle ya da alt çizgi imi
    ile başlar, herhangi bir sayıda harf, rakam ya da alt çizgi ile
    devam eder. Bir sabit ismi düzenli ifade olarak, şu şekilde ifade
    edilebilir: <literal>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</literal>
  </para>
    &tip.userlandnaming;
  <para>
   <example>
    <title> - Geçerli ve geçersiz sabit isimleri</title>
    <programlisting role="php">
<![CDATA[
<?php

// Geçerli sabit isimleri
define("FOO",     "bir şey");
define("FOO2",    "başka bir şey");
define("FOO_BAR", "daha başka bir şey");

// Geçersiz sabit isimleri
define("2FOO",    "bir şey");

// Bu geçerli olmasına rağmen kullanmaktan kaçınılmalıdır.
// PHP bir gün betiğinizin çalışmasını bozacak bir sihirli
// sabit kullanmaya karar verebilir.
define("__FOO__", "bir şey");

?>]]>
    </programlisting>
   </example>
  </para>
  <note>
   <simpara>
    Burada bir harften söz ettiğimiz zaman, ASCII a-Z veya A-Z arasındaki ki
    bir karakterden veya karakter kodu 127-255 (0x7f-0xff) arasındaki bir
    karakterler bahsetmiş oluyoruz.
   </simpara>
  </note>

  <simpara>
    <link linkend="language.variables.superglobals">Özdevinimli genel
    değişkenlerde</link> olduğu gibi, sabitlerin etki alanı da betiklerin
    genelidir. "Etki alanı" hakkında daha ayrıntılı bilgi edinmek için
    <link linkend="language.variables.scope">Değişken Etki Alanı</link>
    bölümünü okuyunuz.
  </simpara>

  <sect1 xml:id="language.constants.syntax">
   <title>Söz dizimi</title>
   <simpara>
    Bir sabiti <function>define</function> işlevini kullanarak
    veya PHP 5.3.0'dan itibaren sınf tanımlarının dışında
    <literal>const</literal> anahtar sözcüğünü kullanarak
    tanımlayabilirsiniz. Bir sabit tanımlandıktan sonra, asla
    değiştirilemez ya da tanımsız yapılamaz.
   </simpara>
   <simpara>
    Bir sabit ismine yalnızca bir sayıl değer (<type>boolean</type>,
    <type>integer</type>, <type>float</type> veya <type>string</type>)
    atanabilir. Sabitleri <type>resource</type> olarak kayıt altına almak
    mümkündür, fakat umulmadık sonuçlara yol açabileceğinden bundan
    kaçınılmalıdır.
   </simpara>
   <simpara>
    Bir sabitin değerini basitçe ismini belirterek alabilirsiniz.
    Değişkenlerin aksine, sabitlerin önüne <literal>$</literal> imi
    eklemeniz gerekmez. Bunun yanında, bir sabitin ismini devingen şekilde
    elde etmek isterseniz, sabitin değerini okumak için
    <function>constant</function> işlevini de kullanabilirsiniz.
    Tanımlanmış sabitlerin tamamının bir listesini almak için,
    <function>get_defined_constants</function> işlevini kullanabilirsiniz.
   </simpara>
   <note>
    <simpara>
      Sabitlerin ve (genel) değişkenlerin isim alanları farklıdır. Bu,
      örneğin &true; ile <varname>$TRUE</varname> değerlerinin farklı
      olabilecekleri anlamına gelir.
    </simpara>
   </note>
   <simpara>
    Tanımlanmamış bir sabit ismi kullanırsanız, PHP, bir sabit değil bir
    sayıl değer kullanmak istediğinizi varsayar ve sabiti <type>string</type>
    türünde bir değer (SABIT yerine "SABIT" ) olarak ele alır. Böyle bir
    durumda <link linkend="ref.errorfunc" >E_NOTICE</link> seviyesinde bir
    hata çıktılanır. Ayrıca, <code>$foo[bar]</code> kullanımının (evvelce
    <function>define</function> işleviyle <code>bar</code> isminde bir sabit
    tanımlamamışsanız) neden yanlış olduğuyla ilgili açıklamayı <link
    linkend="language.types.array.foo-bar"><code>$foo[bar]</code> neden
    yanlıştır?</link> başlığı altında bulabilirsiniz. Bir sabitin tanımlı
    olup olmadığını <function>defined</function> işlevi sayesinde kolayca
    öğrenebilirsiniz.
   </simpara>
   <para>
    <emphasis>Sabitler ve değişkenler arasındaki farklar:</emphasis>
    <itemizedlist>
     <listitem>
      <simpara>
        Bir sabit ismi <literal>$</literal> imi ile başlamaz.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
        Sabitler basit bir atama ile değil, sadece
        <function>define</function> işlevi kullanılarak tanımlanabilirler.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
        Sabitler, değişken etki alanı kurallarına bağlı olmaksızın her yerde
        tanımlanabilir ve her yerden erişilebilir.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
        Sabitler tanımlandıktan sonra yeniden tanımlanamaz ya da tanımsız
        duruma getirilemez.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
        Bir sabite sadece bir sayıl değer (<type>boolean</type>,
        <type>integer</type>, <type>float</type> veya <type>string</type>
        türünde bir değer) atanabilir.
       </simpara>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    <example>
     <title>- Sabitlerin Tanımlanması</title>
     <programlisting role="php">
<![CDATA[
<?php
define("CONSTANT", "Merhaba dünya.");
echo CONSTANT; // "Merhaba dünya" çıktılar.
echo Constant; // "Constant" çıktılar ve bir bilgi iletisi gösterir.
?>
]]>
     </programlisting>
    </example>
   </para>

   <para>
    <example>
      <title>- Sabitlerin <code>const</code> ile tanımlanması</title>
      <programlisting role="php">
<![CDATA[
<?php
// PHP 5.3.0 ve sonrasında çalışır
const CONSTANT = 'Merhaba Dünya';

echo CONSTANT;
?>
]]>
      </programlisting>
    </example>
   </para>

   <simpara>
    Ayrıca, <link linkend="language.oop5.constants">Sınıf Sabitleri</link>
    belgesine de bakınız.
   </simpara>
  </sect1>

  <sect1 xml:id="language.constants.predefined">
   <title>Sihirli Sabitler</title>

   <simpara>
    PHP, çalışan her betiğin erişebileceği çok sayıda <link
    linkend="reserved.constants">öntanımlı sabit</link>&apos;e sahiptir. Öte
    yandan, bu sabitlerin çoğu, çeşitli eklentiler tarafından
    tanımlandığından, sadece eklenti bir modül olarak veya PHP içinde
    derlenmişse kullanılabilir.
   </simpara>

   <para>
    Değerleri kullanıldıkları yere göre değişen beş sihirli sabit vardır.
    Örneğin, <constant>__LINE__</constant> sabitinin değeri betiğin hangi
    satırında kullanıldığına bağlıdır. Bu özel sabitler büyük-küçük harf
    farkına duyarsızdır ve aşağıda listelenmişlerdir:
   </para>
   <para>
    <table>
     <title>Birkaç "sihirli" PHP sabiti</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>İsim</entry>
        <entry>Açıklama</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><constant>__LINE__</constant></entry>
        <entry>
          Dosyada bu sabitin bulunduğu satırın numarası.
        </entry>
       </row>
       <row>
        <entry><constant>__FILE__</constant></entry>
        <entry>
          Dosyanın tam dosya yolu ve dosya ismi. <function>include</function>
          işlevi ile betiğe eklenen bir dosyanın içinde kullanıldığında
          betiğin ismini değil, eklenen dosyanın ismini içerir. PHP 4.0.2'den
          itibaren,	<constant>__FILE__</constant> değeri daima sembolik
          bağları çözümlenmiş olarak mutlak dosya yolunu içerirken, daha eski
          sürümler bazı durumlarda göreli dosya yolunu içerebilir.
        </entry>
       </row>
       <row>
        <entry><constant>__FUNCTION__</constant></entry>
        <entry>
          İşlev ismi. (PHP 4.3.0 ile eklenmiştir). PHP 5 itibariyle bu sabit,
          işlev ismini bildirimindeki haliyle (büyük-küçük harf duyarlı)
          içerir.	PHP 4 sürümünde ise bu değer her zaman küçük harflerden
          oluşur.
        </entry>
       </row>
       <row>
        <entry><constant>__CLASS__</constant></entry>
        <entry>
          Sınıf ismi. (PHP 4.3.0 ile eklenmiştir). PHP 5 itibariyle bu sabit,
          sınıf ismini bildirimindeki haliyle (büyük-küçük harf duyarlı)
          içerir. PHP 4 sürümünde ise bu değer her zaman küçük harflerden
          oluşur.
        </entry>
       </row>
       <row>
        <entry><constant>__METHOD__</constant></entry>
        <entry>
          Yöntem ismi. (PHP 5.0.0 ile eklenmiştir). Bu sabit, yöntem ismini
          daima bildirimindeki haliyle (büyük-küçük harf duyarlı) içerir.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Ayrıca bakınız:
    <function>get_class</function>,
    <function>get_object_vars</function>,
    <function>file_exists</function>&listendand;
    <function>function_exists</function>.
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
