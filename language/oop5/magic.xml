<?xml version="1.0" encoding="iso-8859-9"?>
<!-- $Revision: 1.2 $ -->
 <sect1 xml:id="language.oop5.magic" xmlns="http://docbook.org/ns/docbook">
  <title>Sihirli (Magic) Metodlar</title>
  <para>
   <literal>__construct</literal>,
   <literal>__destruct</literal>
   (bakýnýz <link linkend="language.oop5.decon">Ýlklendiriciler ve Sonlandýrýcýlar</link>),
   <literal>__call</literal>,
   <literal>__get</literal>,
   <literal>__set</literal>,
   <literal>__isset</literal>,
   <literal>__unset</literal>
   (bakýnýz <link linkend="language.oop5.overloading">Overloading</link>),
   <literal>__sleep</literal>,
   <literal>__wakeup</literal>,
   <literal>__toString</literal>,
   <literal>__set_state</literal>,
   <link linkend="language.oop5.cloning">__clone</link> ve
   <link linkend="language.oop5.autoload">__autoload</link>
   fonksiyonlarý, PHP sýnýflarý içerisinde sihirli fonksiyonlar olarak bilinir.
   Bir sýnýf içerisinde, yukarýdaki fonksiyon isimlerini ancak bu fonksiyonlarýn
   sihirli özelliklerinden faydalanmak istediðinizde kullanabilirsiniz.
  </para>

  <caution>
   <simpara>
   PHP __ ile baþlayan tüm fonksiyon isimlerini sihirli olarak ayýrmýþtýr.
   Bu sebeple __ ile baþlayan fonksiyon isimleri kullanmamanýzý öneririz.
   </simpara>
  </caution>
 
  <sect2 xml:id="language.oop5.magic.sleep">
   <title><literal>__sleep</literal> ve <literal>__wakeup</literal></title>
   <para>
    <function>serialize</function> fonksiyonu, sýnýfýnýza dahil bir
    sihirli <literal>__sleep</literal> fonksiyonu olup olmadýðýný kontrol eder.
    Bu fonksiyon mevcutsa, serialization iþleminden önce bu fonksiyon çalýþtýrýlýr.
    Bu fonksiyon ile nesne üzerinde temizlik yapabilir ve serialize edilmesi
    gereken nesneye ait tüm deðiþkenleri içeren bir dizinin döndürülmesini
    saðlayabilirsiniz.
   </para>
   <para>
   <literal>__sleep</literal> fonksiyonunun alýþýlageldik kullanýmýnda
   tüm veritabaný baðlantýlarý kapatýlýr, beklemede olan veri iþlemlerinin
   onaylanmasý ve benzeri temizleme iþlemleri de buna dahildir.
   Tümüyle kaydedilmesi gerekmeyen büyük veri parçalarý sözkonusu olduðunda
   yine bu fonksiyondan faydalanabilirsiniz.
   </para>
   <para>
   <function>unserialize</function> fonksiyonu tersine bir iþlem yaparak
   <literal>__wakeup</literal> sihirli fonksiyonunun varlýðýný araþtýrýr.
   Bu fonksiyon mevcutsa, nesnenin sahip olduðu tüm kaynaklar yeniden
   oluþturulmaya çalýþýlýr.
   </para>
   <para>
   <literal>__wakeup</literal> fonksiyonunun alýþýlageldik kullanýmý,
   serialization iþlemi sýrasýnda kaybolan veritabaný baðlantýlarýnýn yeniden kurulmasýdýr.
   Ayrýca nesne ile ilgili diðer baþlangýç iþlemleri de gerçekleþtirilebilir.
   </para>
   <example>
    <title>Sleep ve wakeup</title>
    <programlisting role="php">
<![CDATA[
<?php
class Connection {
    protected $link;
    private $server, $username, $password, $db;
    
    public function __construct($server, $username, $password, $db)
    {
        $this->server = $server;
        $this->username = $username;
        $this->password = $password;
        $this->db = $db;
        $this->connect();
    }
    
    private function connect()
    {
        $this->link = mysql_connect($this->server, $this->username, $this->password);
        mysql_select_db($this->db, $this->link);
    }
    
    public function __sleep()
    {
        mysql_close($this->link);
    }
    
    public function __wakeup()
    {
        $this->connect();
    }
}
?>
]]>
    </programlisting>
   </example>
  </sect2>

  <sect2 xml:id="language.oop5.magic.tostring">
   <title><literal>__toString</literal></title>
   <para>
    <literal>__toString</literal> metodu, sýnýf bir karakter dizisine çevrildiðinde
    nasýl davranýlacaðýný belirler.
   </para>
   <example>
    <title>Basit bir örnek</title>
    <programlisting role="php">
<![CDATA[
<?php
// Basit bir sýnýf tanýmý
class TestClass
{
    public $foo;

    public function __construct($foo) {
        $this->foo = $foo;
    }

    public function __toString() {
        return $this->foo;
    }
}

$class = new TestClass('Merhaba');
echo $class;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Merhaba
]]>
    </screen>
   </example>
   <para>
   <literal>__toString</literal> metodu, <function>echo</function> ya da
   <function>print</function> fonksiyonlarý ile birlikte kullanýlmadýðý
   sürece kendi baþýna bir deðer taþýmaz.
   </para>
   <example>
    <title><literal>__toString</literal> kullanýldýðý durumlar</title>
    <programlisting role="php">
<![CDATA[
<?php
// __toString çaðrýlýr
echo $class;

// __toString çaðrýlýr (echo için normal bir parametre)
echo 'metin', $class;

// __toString çaðrýlmaz (önce birleþtirme operatörü kullanýlmýþ)
echo 'metin' . $class;

// __toString çaðrýlmaz (önce karakter dizisine çevrilmiþ)
echo (string) $class;

// __toString çaðrýlmaz (önce karakter dizisine çevrilmiþ)
echo "metin $class";
?>
]]>
    </programlisting>
   </example>
  </sect2>

  <sect2 xml:id="language.oop5.magic.set-state">
   <title><literal>__set_state</literal></title>
   <para>
    Bu <link linkend="language.oop5.static">static</link> metod, <function>var_export</function>
    tarafýndan dýþa aktarýlmýþ sýnýflar için PHP 5.1.0 sürümünden beri kullanýlmaktadýr.
   </para>
   <para>
   Bu metod için tek parametre, <literal>array('property' => value, ...)</literal> formunda
   dýþa aktarýlmýþ özellikleri içeren bir dizidir.
   </para>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
