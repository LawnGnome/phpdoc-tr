<?xml version="1.0" encoding="iso-8859-9"?>
<!-- $Revision: 1.1 $ -->
 <sect1 id="language.oop5.interfaces">
  <title>Nesne Arayüzleri</title>
  <para>
  Nesne arayüzleri size bir sýnýfýn sahip olmasý gereken metodlarý gösteren kodlarý,
  bu metodlarýn nasýl yönetileceðini tanýmlamanýza gerek kalmadan tanýmlayabilmenizi saðlar.
  </para>
  <para>
  Arayüzler, interface anahtar sözcüðü kullanarak tanýmlanýr. Tanýmlama iþlemi standart
  sýnýflarda olduðu gibidir, ancak hiçbir metodun içeriði tanýmlanmamýþtýr.
  </para>
  <para>
  Arayüz olarak tanýmlanmýþ tüm metodlar public olarak tanýmlanmalýdýr. Bu arayüz kullanýmýnýn
  doðal mantýðýdýr.
  </para>
  <sect2>
   <title><literal>implements</literal></title>
   <para>
   Bir arayüzü gerçekleþtirmek için, <literal>implements</literal> operatörü kullanýlýr.
   Arayüzdeki tüm metodlar bir sýnýf içersinde gerçekleþtirilmelidir; bunu yapamadýðýnýz
   yakdirde ölümcül hata ile karþýlaþýrsýnýz. Her bir sýnýf virgülle ayrýldýðý takdirde,
   bir sýnýf birden fazla arayüzü gerçekleþtirebilir.
   </para>
   <note>
    <para>
    Belirsizliðe yol açacaðýndan, bir sýnýf fonksiyon isimlerini paylaþan iki
    farklý arayüzü gerçekleþtiremez.
    </para>
   </note>
  </sect2>
  <sect2>
   &reftitle.examples;
   <example>
    <title>Arayüz örneði</title>
     <programlisting role="php">
<![CDATA[
<?php
// 'iTemplate' arayüzünün tanýmlanmasý
interface iTemplate
{
    public function setVariable($name, $var);
    public function getHtml($template);
}

// Arayüzün gerçekleþtirilmesi
// Bu çalýþacaktýr
class Template implements iTemplate
{
    private $vars = array();
  
    public function setVariable($name, $var)
    {
        $this->vars[$name] = $var;
    }
  
    public function getHtml($template)
    {
        foreach($this->vars as $name => $value) {
            $template = str_replace('{' . $name . '}', $value, $template);
        }
 
        return $template;
    }
}

// Bu çalýþmayacaktýr
// Ölümcül hata: BadTemplate sýnýfý 1 soyut metod içermektedir
// ve bu metodun abstract olarak tanýmlanmasý gerekmektedir (iTemplate::getHtml)
class BadTemplate implements iTemplate
{
    private $vars = array();
  
    public function setVariable($name, $var)
    {
        $this->vars[$name] = $var;
    }
}

?>
]]>
    </programlisting>
   </example>
   <simpara>
   Ayrýca bakýn: <link linkend="language.operators.type">instanceof</link> operatörü.
   </simpara>
  </sect2>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
