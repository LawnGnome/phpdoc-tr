<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.16 Maintainer: nilgun Status: ready -->
<!-- CREDITS: Serdar Soydemir, Sezer Yalçın -->
<!-- Last translator: Nilgün Belma Bugüner -->
 <sect1 xml:id="language.oop5.decon" xmlns="http://docbook.org/ns/docbook">
  <title>Kurucular ve Yıkıcılar</title>

  <sect2 xml:id="language.oop5.decon.constructor">
   <title>Kurucular</title>
   <methodsynopsis>
    <type>void</type><methodname>__construct</methodname>
    <methodparam choice="opt">
    <type>mixed</type><parameter>değiştirge</parameter></methodparam>
    <methodparam choice="opt"><parameter>...</parameter></methodparam>
   </methodsynopsis>
   <para>
    PHP 5 geliştiricilerin sınıflar için kurucu yöntemler bildirmesine
    imkan verir. Bir kurucu yöntemi olan sınıflar her yeni nesne
    oluşturuluşunda bu yöntemi çağırırlar, bu bakımdan nesne kullanılmadan
    önce yapılması gereken ilklendirmeler için kurucular çok uygundur.
   </para>
   <note>
    <simpara>
     Çocuk sınıflardan kurucusu olanlar için örtük olarak ebeveyn sınıfın
     kurucusu çağrılmaz. Ebeveyn sınıfın kurucusunu çocuk sınıftan çağırmak
     için, çocuk sınıf içinden <function>parent::__construct</function>
     çağrısı yapılması gerekir.
    </simpara>
   </note>
   <example>
    <title>- Yeni tekilleşmiş kurucuların kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
class AnaSınıf {
   function __construct() {
       print "AnaSınıf kurucusundayız\n";
   }
}

class AltSınıf extends AnaSınıf {
   function __construct() {
       parent::__construct();
       print "AltSınıf kurucusundayız\n";
   }
}

$obj = new AnaSınıf();
$obj = new AltSınıf();
?>
]]>
    </programlisting>
   </example>
   <para>
    Geriye dönük uyumluluk için, PHP 5 belirtilen sınıfa ait bir
    <function>__construct</function> yöntemi bulamazsa, sınıfın ismine
    bakarak eski tarz bir kurucu arayacaktır. Dolayısıyla, uyumluluk sorunu
    yaşayacağınız tek durum sınıf dahilinde <function>__construct</function>
    isimli bir yöntemin amacı dışında kullanılması olabilir.
   </para>
  </sect2>

  <sect2 xml:id="language.oop5.decon.destructor">
   <title>Yıkıcılar</title>
   <methodsynopsis>
    <type>void</type><methodname>__destruct</methodname>
    <void />
   </methodsynopsis>
   <para>
    PHP 5, C++ gibi nesne yönelimli dillerdekine benzer bir yıkıcı tasarımına
    sahiptir. Yıkıcı yöntem, belli bir nesneye yönelik tüm gönderimler
    kaldırıldığı ya da nesne kapanma sırasında açıkça yok edildiği anda
    çalıştırılacaktır.
   </para>
   <example>
    <title>- Yıkıcı Örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class YıkıcıSınıf {
   function __construct() {
       print "Kurucu çalıştı\n";
       $this->name = "YıkıcıSınıf";
   }

   function __destruct() {
       print "" . $this->name . " yok ediliyor\n";
   }
}

$obj = new YıkıcıSınıf();
?>
]]>
    </programlisting>
   </example>
   <para>
    Kurucularda olduğu gibi ebeveyn yıkıcılar çocuk sınıflar için dolaylı
    olarak çağrılmayacaktır. Ebeveyn sınıfın yıkıcısının çalışması için çocuk
    sınıfın yıkıcısından <function>parent::__destruct</function> çağrısının
    yapılması gerekir.
   </para>
   <note>
    <para>
      Yıkıcılar, HTTP başlıklarının gönderilmiş olmasını sağlamak için betik
      sonlanırken çağrılırlar. Betiğin kapanma aşamasındaki çalışma dizini
      bazı SAPI’lerde (Apache gibi) farklı olabilir.
    </para>
   </note>
   <note>
    <para>
      Bir yıkıcı içinden bir istisna oluşturmaya çalışmak (betiğin
      sonlandırılması sırasında) ölümcül hata ile sonuçlanır.
    </para>
   </note>
  </sect2>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
