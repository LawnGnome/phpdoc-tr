<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
 <sect1 xml:id="language.oop5.properties" xmlns="http://docbook.org/ns/docbook">
  <title>Özellikler</title>

  <para>
   Sınıf üyesi değişkenlere "özellik" denir. Bunlara bazan "öznitelik" veya
   "alan" dendiğini de görürsünüz, fakat bu kılavuzun amaçları doğrultusunda
   biz "özellik" terimini kullanacağız. Bunlar normal değişken bildiriminin
   önüne <literal>public</literal>, <literal>protected</literal>,
   veya <literal>private</literal> anahtar sözcükleri getirilerek bildirilir.
   Bildirim, bir ilklendirme olarak da yapılabilir; bu durumda bir sabit
   değerle ilklendirme yapılmalıdır. Yani, derleme sırasında
   değerlendirilebilmeli, çalışma anında değerlendirilebilecek bilgiler
   içermemelidir.
  </para>
  <para>
   <literal>public</literal>, <literal>protected</literal>,
   ve <literal>private</literal> sözcüklerinin anlamları için
   <xref linkend="language.oop5.visibility" /> belgesine bakınız.
  </para>
  <note>
   <para>
    PHP 4 ile geriye uyumluluğu sağlamak için, PHP 5 özellik bildiriminde
    <literal>public</literal>, <literal>protected</literal>,
    veya  <literal>private</literal> yerine (veya ek olarak) hala
    <literal>var</literal> sözcüğü kabul edilmektedir. Ancak,
    <literal>var</literal> artık gerekli değildir. PHP'nin 5.0'dan 5.1.3'e
    kadar olan sürümlerinde, <literal>var</literal> kullanımı önerilmeyen
    kullanım olarak ele alınır ve bir <constant>E_STRICT</constant> uyarısı
    çıktılanırdı; PHP 5.1.3'ten beri önerilmeme durumu ortadan kalkmış olup bir
    uyarı çıktılanmamaktadır.
   </para>
   <para>
    Bir özelliği <literal>public</literal>, <literal>protected</literal>,
    veya <literal>private</literal> yerine <literal>var</literal> kullanarak
    bildirirseniz PHP 5 özelliği <literal>public</literal> olarak bildirilmiş
    gibi ele alır.
   </para>
  </note>
  <para>
   Özelliklere, sabitlere ve yöntemlere sınıf yöntemleri içinden erişilirken
   yöntem duruk ise <varname>self::$özellik</varname>, değilse <varname>$this-
   &gt;özellik</varname> sözdizimi kullanılabilir (burada "özellik" özelliğin
   ismidir). Daha ayrıntılı bilgi için <xref linkend="language.oop5.static" />
   bölümüne bakınız.
  </para>
  <para>
   Yöntem bir nesne bağlamından çağrılıyorsa  <varname>$this</varname> sözde
   değişkeni sınıf yöntemleri içinde de kullanılabilir.
   <varname>$this</varname>, yöntemi çağıran nesneye (yöntemin ait olduğu
   nesneye) bir gönderimdir. Fakat yöntem, bir ikincil nesne bağlamından <link
   linkend="language.oop5.static">duruk olarak</link> çağrılıyorsa, bu,
   birincil nesne de olabilir.
  </para>

  <para>
   <example>
    <title>- Özellik bildirimi</title>
    <programlisting role="php">
<![CDATA[
<?php
class SimpleClass
{
   // geçersiz özellik bildirimleri:
   public $var1 = 'hello ' . 'world';
   public $var2 = <<<EOD
hello world
EOD;
   public $var3 = 1+2;
   public $var4 = self::myStaticMethod();
   public $var5 = $myVar;

   // geçerli özellik bildirimleri:
   public $var6 = myConstant;
   public $var7 = array(true, false);

   // Buna sadece PHP 5.3.0 ve sonrasında izin verilir.
   public $var8 = <<<'EOD'
hello world
EOD;
}
?>
]]>
    </programlisting>
   </example>
  </para>

  <note>
   <para>
    Sınıflar ve nesnelerle çalışan bazı işlevler vardır. Bunlar için
    <xref linkend="ref.classobj" /> bölümüne bakınız.
   </para>
  </note>

  <para>
   <link linkend="language.types.string.syntax.nowdoc">Yorumsuz
   metinler</link>, <link linkend="language.types.string.syntax.heredoc">
   yorumlu metinlerin</link> tersine özellik bildirimleri dahil herhangi bir
   duruk veri bağlamında kullanılabilir.
   <example>
    <title>- Özellik ilklendirmede yorumsuz metin kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
class foo {
   // PHP 5.3.0'dan beri
   public $bar = <<<'EOT'
bar
EOT;
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    Yorumsuz metin desteği PHP 5.3.0'da eklenmiştir.
   </para>
  </note>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
