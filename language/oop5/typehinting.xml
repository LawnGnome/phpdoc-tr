<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.6 Maintainer: nilgun Status: ready -->
<!-- CREDITS: tpug, sezer -->
 <sect1 xml:id="language.oop5.typehinting" xmlns="http://docbook.org/ns/docbook">
  <title>Tür Dayatma</title
    >
  <para>
    PHP 5, Tür Dayatma özelliğine sahiptir. İşlevler artık değiştirgelerinde
    belli bir nesne veya (PHP 5.1 ve sonrasında) bir dizi belirtilmesi için
    zorlayıcı olabilmektedir.
  </para>

  <example>
   <title>- Tür dayatma örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
// Şöyle bir sınıfımız olsun
class Sınıfım
{
    /**
     * Bir nesne sınama işlevi
     *
     * İlk değiştirge ÖbürSınıf türünde bir nesne olmalı
     */
    public function nesne_dnm(ÖbürSınıf $diğersınıf) {
        echo $diğersınıf->değişken;
    }


    /**
     * Bir dizi sınama işlevi
     *
     * İlk değiştirge bir dizi olmalı
     */
    public function dizi_dnm(array $dizi_girdisi) {
        print_r($dizi_girdisi);
    }
}

// Bu da öbür sınıfımız olsun
class ÖbürSınıf {
    public $değişken = 'Merhaba Dünya';
}
?>
]]>
   </programlisting>
   <para>
    Dayatılan türe uymamanın sonucu yakalanabilir bir ölümcül hatadır.
   </para>
    <programlisting role="php">
<![CDATA[
<?php
// Her iki sınıftan birer örnek oluşturalım
$sınıfım = new Sınıfım;
$diğersınıf = new ÖbürSınıf;

// Ölümcül Hata: 1. değiştirge ÖbürSınıf türünde bir nesne olmalıdır
$sınıfım->nesne_dnm('hello');

// Ölümcül Hata: 1. değiştirge ÖbürSınıf türünde bir nesne örneği olmalıdır
$foo = new stdSınıf;
$sınıfım->nesne_dnm($foo);

// Ölümcül Hata: 1. değiştirge null olmamalıdır
$sınıfım->nesne_dnm(null);

// Bu çalışır: Merhaba Dünya yazdırır
$sınıfım->nesne_dnm($otherclass);

// Ölümcül Hata: 1. değiştirge bir dizi olmalıdır
$sınıfım->dizi_dnm('bir metin');

// Bu çalışır: Diziyi yazdırır
$sınıfım->dizi_dnm(array('a', 'b', 'c'));
?>
]]>
   </programlisting>
   <para>
    Tür dayatma işlevlerle de çalışır:
   </para>
    <programlisting role="php">
<![CDATA[
<?php
// Şöyle bir sınıfımız olsun
class Sınıfım {
    public $değişken = 'Merhaba Dünya';
}

/**
 * Bir işlev sınama işlevi
 *
 * İlk değiştirge Sınıfım türünde bir nesne olmalı
 */
function İşlevim (Sınıfım $birsınıf) {
    echo $birsınıf->değişken;
}

// Bu çalışır
$sınıfım = new Sınıfım;
İşlevim($sınıfım);
?>
]]>
   </programlisting>
   <para>
    Tür dayatırken NULL değere izin verilir:
   </para>
    <programlisting role="php">
<![CDATA[
<?php

/* NULL değerin kabul edilmesi */
function deneme(stdSınıf $obj = NULL) {

}

deneme(NULL);
deneme(new stdSınıf);

?>
]]>
   </programlisting>
  </example>
  <para>
    Tür dayatma (PHP 5.1 itibariyle) sadece <type>object</type> veya
    <type>array</type> türünde olabilir. <type>int</type> ve
    <type>string</type> ile yapılan geleneksel tür dayatma
    desteklenmemektedir.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
