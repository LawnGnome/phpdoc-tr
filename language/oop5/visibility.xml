<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- $Header: /home/svn/phpsvn_tmp/cvsrepo/phpdoc/tr/language/oop5/visibility.xml,v 1.4 2008-01-11 08:53:45 sezer Exp $ -->
 <sect1 xml:id="language.oop5.visibility" xmlns="http://docbook.org/ns/docbook">
  <title>Görünürlük (Visibility)</title>
  <para>
  Bir özelligin ya da bir metodun görünürlügü, bu özellik ya da metod tanimlanirken
  basina eklenecek su anahtar sözcüklerle belirlenebilir: public, protected ya da
  private. Public olarak tanimlanmis ögeler her yerden erisilebilir durumdadir.
  Protected tanimlanmis ögelere erisim, miras alinmis ve ana siniflarla sinirlidir
  (ve bu ögeyi tanimlayan sinif). Private tanimlanmis ögelere erisim yalnizca
  bu ögeyi tanimlayan sinifla sinirlidir.
  </para>
  <sect2 xml:id="language.oop5.visiblity-members">
   <title>Ögelerin Görünürlügü</title>
   <para>
   Sinif öğeleri public, private ya da protected olarak tanimlanmalidir.
   </para>
   <para>
    <example>
     <title>Öge tanimi</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * MyClass tanimi
 */
class MyClass
{
    public $public = 'Genel';
    protected $protected = 'Korumali';
    private $private = 'Özel';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj = new MyClass();
echo $obj->public; // Çalisir
echo $obj->protected; // Ölümcül Hata
echo $obj->private; // Ölümcül Hata
$obj->printHello(); // Genel, Korumali ve Özel görüntüler


/**
 * MyClass2 tanimi
 */
class MyClass2 extends MyClass
{
    // public ve protected metodlari yeniden tanimlayabiliriz, ancak private
    // olanlar tanimlanamaz
    protected $protected = 'Korumali2';

    function printHello()
    {
        echo $this->public;
        echo $this->protected;
        echo $this->private;
    }
}

$obj2 = new MyClass2();
echo $obj->public; // Çalisir
echo $obj2->private; // Tanimsiz
echo $obj2->protected; // Ölümcül Hata
$obj2->printHello(); // Genel ve Korumali2 görüntülenir ancak Private görüntülenmez

?> 
]]>
     </programlisting>
    </example>
   </para>
   <note>
    <simpara>
    PHP 4 ile birlikte kullanilan <emphasis>var</emphasis> anahtar sözcügünün
    kullanimi PHP 5 nesneleri ile birlikte geçerliligini yitirmistir. Uyumluluk
    açisindan bu anahtar sözcük ile tanimlanmis degiskenler öntanimli olarak
    public görünürlük kapsaminda degerlendirilecektir. Buna ek olarak
    <constant>E_STRICT</constant> uyarisi üretilecektir.
    </simpara>
   </note>
  </sect2>
  <sect2 xml:id="language.oop5.visiblity-methods">
   <title>Metod Görünürlügü</title>
   <para>
   Sinif metodlari public, private ya da protected olarak tanimlanabilir.
   Tanimlama yapilmamis metodlar public olarak kabul edilir.
   </para>
   <para>
    <example>
     <title>Metod Tanimlama</title>
     <programlisting role="php">
<![CDATA[
<?php
/**
 * MyClass tanimi
 */
class MyClass
{
    // Ilklendiriciler public olmalidir
    public function __construct() { }

    // Public metod tanimi
    public function MyPublic() { }

    // Protected metod tanimi
    protected function MyProtected() { }

    // Private metod tanimi
    private function MyPrivate() { }

    // Bu public metoddur
    function Foo()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate();
    }
}

$myclass = new MyClass;
$myclass->MyPublic(); // Çalisir
$myclass->MyProtected(); // Ölümcül Hata
$myclass->MyPrivate(); // Ölümcül Hata
$myclass->Foo(); // Public, Protected ve Private çalisir


/**
 * MyClass2 tanimi
 */
class MyClass2 extends MyClass
{
    // Bu public metoddur
    function Foo2()
    {
        $this->MyPublic();
        $this->MyProtected();
        $this->MyPrivate(); // Ölümcül Hata
    }
}

$myclass2 = new MyClass2;
$myclass2->MyPublic(); // Çalisir
$myclass2->Foo2(); // Public ve Protected çalisir, Private çalismaz
?>
]]>
     </programlisting>
    </example>
   </para>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
