<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.17 Maintainer: nilgun Status: ready -->
<!-- CREDITS: Serdar Soydemir, Sezer Yalçın -->
<!-- Last translator: Nilgün Belma Bugüner -->
 <sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
  <title><code>static</code> Anahtar Sözcüğü</title>
  <para>
    Sınıf üyelerinin ya da yöntemlerinin <code>static</code> olarak
    tanımlanması, o üyelerin ve yöntemlerin sınıf örneğinin oluşturulmasına
    gerek kalmadan erişilebilir olmalarını sağlar. Ancak, <code>static</code>
    olarak bildirilmiş bir üyeye (duruk üye) örneklenmiş sınıf nesnesinden
    erişilemez (ise de <code>static</code> olarak bildirilmiş bir yöntemle
    erişebilir).
  </para>

  <para>
    PHP 4 ile uyumluluğun sağlanabilmesi için, eğer bir üye veya yöntem için
    hiçbir <link linkend="language.oop5.visibility" >görünürlük</link> tanımı
    yapılmamışsa <code>public</code> olarak tanımlanmış varsayılır.
  </para>

  <para>
    Duruk yöntemlerin, nesnenin bir örneği oluşturulmadan erişilebilir
    olmalarından dolayı, <varname>$this</varname> sözde değişkeni,
    <code>static</code> olarak bildirilmiş bir yöntemin içinde kullanılamaz.
  </para>

  <para>
    Duruk özelliklere, nesne üzerinden ok işleci (-&gt;) kullanılarak
    erişilemez.
  </para>

  <para>
    Duruk olmayan özellikler durukmuş gibi çağrılırsa E_STRICT seviyesinde
    bir uyarı üretilir.
  </para>

  <para>
    PHP 5.3.0 ve sonrasında, bir sınıfa bir değişken kullanarak gönderim
    yapılabilmektedir. Böyle bir değişkenin değeri <literal>self</literal>,
    <literal>parent</literal> veya <literal>static</literal> gibi bir anahtar
    sözcük olamaz.
  </para>


  <example>
   <title>- Duruk üye örneği</title>
   <programlisting role="php">
<![CDATA[
<?php
class Falanca
{
    public static $duruk = 'falanca';

    public function durukDeğer() {
        return self::$duruk;
    }
}

class Feşmekan extends Falanca
{
    public function falancaDuruk() {
        return parent::$duruk;
    }
}


print Falanca::$duruk . "\n";

$falanca = new Falanca();
print $falanca->durukDeğer() . "\n";
print $falanca->duruk . "\n";      // Tanımsız "Özellik" duruk

print $falanca::$duruk . "\n";
$sınıfadı = 'Falanca';
print $sınıfadı::$duruk . "\n"; // PHP 5.3.0 ve sonrası

print Feşmekan::$duruk . "\n";
$feşmekan = new Feşmekan();
print $feşmekan->falancaDuruk() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>- Duruk yöntem örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class Falanca {
    public static function birDurukYöntem() {
        // ...
    }
}

Falanca::birDurukYöntem();
$sınıfadı = 'Falanca';
$sınıfadı::birDurukYöntem(); // PHP 5.3.0 ve sonrası

?>
]]>
    </programlisting>
  </example>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
