<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- $Header: /home/svn/phpsvn_tmp/cvsrepo/phpdoc/tr/language/oop5/static.xml,v 1.3 2008-01-11 08:53:45 sezer Exp $ -->
 <sect1 xml:id="language.oop5.static" xmlns="http://docbook.org/ns/docbook">
  <title>Static Anahtar Sözcüğü</title>
  <para>
  Sınıf üyelerinin ya da metodlarının static olarak tanımlanması, bu sınıfların
  ilklendirme (instantiation) yapılmadan erişilebilir olmasını sağlar. Bir üye
  static olarak tanımlandıysa, o üyeye o sınıftan üretilmiş bir nesne aracılığıyla
  erişemezsiniz. O üyeye ancak static bir metod ile erişim sağlayabilirsiniz.
  </para>

  <para>
  Static tanımlaması, görünüm tanımlamasından sonra olmalıdır.
  PHP 4 ile uyumluluğun sağlanabilmesi için, <link
   linkend="language.oop5.visibility">görünüm</link> tanımlaması
   yapılmamış ise, ilgili üye ya da metodun <literal>public</literal>
   olarak tanımlanmış olduğu kabul edilecektir.
  </para>

  <para>
  Static metodların, nesneden bir örnek (instance) yaratılmadan çalıştırabilmesi
  sebebiyle, sözde (pseudo) değişken <varname>$this</varname> static olarak
  tanımlanmış bir metodun içinde kullanılamaz.
  </para>
  
  <para>
  Özünde, <literal>static</literal> metod çağrıları derleme esnasında çözümlenir.
  Kesin (explicit) bir sınıf ismi kullanıldığında, metod önceden tanımlanmış
  olduğundan kalıtsal (inheritance) kurallar uygulanmaz. Çağrı <literal>self</literal> tarafından
  yapılmış ise, <literal>self</literal> kodun ait olduğu mevcut sınıfa dönüştürülür.
  Bu durumda da kalıtsal kurallar uygulanmaz.
  </para>
  
  <para>
  Static özelliklere, ok operatörü -&gt; kullanılarak erişilemez.
  </para>

  <para>
  Static olmayan metodların static olarak çağrılması E_STRICT seviyesinde uyarı oluşturur.
  </para>

  <example>
   <title>Static üye örneği</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    public static $my_static = 'foo';

    public function staticValue() {
        return self::$my_static;
    }
}

class Bar extends Foo
{
    public function fooStatic() {
        return parent::$my_static;
    }
}


print Foo::$my_static . "\n";

$foo = new Foo();
print $foo->staticValue() . "\n";
print $foo->my_static . "\n";      // Tanımsız "Özellik" my_static 

// $foo::my_static kullanımı mümkün değildir

print Bar::$my_static . "\n";
$bar = new Bar();
print $bar->fooStatic() . "\n";
?>
]]>
   </programlisting>
  </example>

  <example>
   <title>Static metod örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class Foo {
    public static function aStaticMethod() {
        // ...
    }
}

Foo::aStaticMethod();
?> 
]]>
    </programlisting>
  </example>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
