<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.32 Maintainer: nilgun Status: ready -->
<!-- CREDITS: Serdar Soydemir, Sezer Yalçın -->
<!-- Last translator: Nilgün Belma Bugüner -->
 <sect1 xml:id="language.oop5.overloading" xmlns="http://docbook.org/ns/docbook">
  <title>Aşırı Yükleme</title>
  <para>
    PHP'deki aşırı yükleme, bir sınıfın üyelerini ve yöntemlerini devingen
    olarak <quote>oluşturmak</quote> anlamına gelmektedir. Bu devingen öğeler,
    çeşitli eylem türleri için sınıf içinde oluşturulabilen sihirli
    yöntemler üzerinden işleme sokulurlar.
  </para>
  <para>
    Aşırı yükleme yöntemleri, henüz bildirilmemiş veya geçerli etki alanında
    <link linkend="language.oop5.visibility">görünür</link> olmayan üyeler ve
    yöntemlerle etkileşilmek istendiğinde çağrılırlar. Bu bölümün kalanında
    bu bildirim ve görünürlükle ilgili durumdan bahsederken
    <quote>erişilemeyen üyeler</quote> ve
    <quote>erişilemeyen yöntemler</quote> terimlerini kullanacağız.
  </para>
  <para>
    Tüm aşırı yükleme yöntemlerinin <code>public</code> olarak tanımlanması
    gerekir.
  </para>
  <para>
    Bu sihirli yöntemlerin değiştirgelerinin hiçbiri <link
    linkend="functions.arguments.by-reference">gönderimli olarak
    aktarılamaz</link>.
  </para>
  <note>
   <para>
    PHP'nin <quote>aşırı yükleme</quote> konusundaki yorumu çoğu nesne
    yönelimli dilden farklıdır. Aşırı yükleme geleneksel olarak, dile, farklı
    miktar ve türde değiştirgeye sahip aynı isimde çok sayıda yönteme sahip
    olabilme yeteneği sağlar.
   </para>
  </note>

  <sect2 xml:id="language.oop5.overloading.changelog">
   &reftitle.changelog;
   <para>
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>&Version;</entry>
        <entry>&Description;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>5.1.0</entry>
        <entry>
         <literal>__isset()</literal> ve <literal>__unset()</literal> eklendi.
        </entry>
       </row>
       <row>
        <entry>5.3.0</entry>
        <entry>
         <literal>__callStatic()</literal> eklendi. Genel etki alanında
         görünürlüğü ve devingen bildirimini zorunlu kılacak uyarı eklendi.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </para>
  </sect2>

  <sect2 xml:id="language.oop5.overloading.members">
   <title>Üyelerde aşırı yükleme</title>

   <methodsynopsis>
    <type>void</type><methodname>__set</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
    <methodparam><type>mixed</type><parameter>değer</parameter></methodparam>
   </methodsynopsis>
   <methodsynopsis>
    <type>mixed</type><methodname>__get</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
   </methodsynopsis>
   <methodsynopsis>
    <type>bool</type><methodname>__isset</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
   </methodsynopsis>
   <methodsynopsis>
    <type>void</type><methodname>__unset</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
   </methodsynopsis>

   <para>
    <literal>__set()</literal> erişilemeyen üyelere veri yazarken
    çalıştırılır.
   </para>

   <para>
    <literal>__get()</literal> erişilemeyen üyelerden veri okurken devreye
    sokulur.
   </para>

   <para>
    <literal>__isset()</literal> erişilemeyen üyeler için
    <function>isset</function> veya <function>empty</function> çağrıldığında
    tetiklenir.
   </para>

   <para>
    <literal>__unset()</literal> erişilemeyen üyeler için
    <function>unset</function> kullanıldığında çağrılır.
   </para>
   <para>
    <varname>$isim</varname> değiştirgesi etkileşime girilecek üyenin
    ismidir. <literal>__set()</literal> yönteminin <varname>$değer</varname>
    değiştirgesi, <varname>$isim</varname> adlı üyeye atanacak değeri
    belirler.
   </para>
   <para>
    Üyeler üzerindeki aşırı yükleme sadece nesne bağlamında çalışır. Bu
    sihirli yöntemler duruk bağlamda tetiklenmeyecektir. Bu bakımdan, bu
    yöntemler <link linkend="language.oop5.static">static</link>
    bildirilemez.
   </para>
   <example>
    <title>- <code>__get, __set, __isset</code> ve <code>__unset</code> ile
    aşırı yükleme örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class ÜyeSınama {
    /**  Aşırı yüklemeye konu veriler burada.  */
    private $veri = array();

    /**  Bildirilmiş üyeler için aşırı yükleme kullanılmaz.  */
    public $bildirilmiş = 1;

    /**  Aşırı yükleme sadece sınıf dışından erişilemeyen üyeler içindir.  */
    private $gizli = 2;

    public function __set($isim, $değer) {
        echo "'$isim' adlı üyeye '$değer' atanıyor.\n";
        $this->veri[$isim] = $değer;
    }

    public function __get($isim) {
        echo "'$isim' adlı üyenin değeri isteniyor\n";
        if (array_key_exists($isim, $this->veri)) {
            return $this->veri[$isim];
        }

        $trace = debug_backtrace();
        trigger_error(
            $trace[0]['file'] . ' dosyasının ' .
            $trace[0]['line'] . '. satırında ' .
            '__get() ile tanımsız özellik istendi: ' . $isim,
            E_USER_NOTICE);
        return null;
    }

    /**  PHP 5.1.0'dan itibaren  */
    public function __isset($isim) {
        echo "'$isim' atanmış mı?\n";
        return isset($this->veri[$isim]);
    }

    /**  PHP 5.1.0'dan itibaren  */
    public function __unset($isim) {
        echo "'$name' siliniyor\n";
        unset($this->veri[$isim]);
    }

    /**  Sihirli bir yöntem değil; sadece örnek olsun diye.  */
    public function gizliyiOku() {
        return $this->gizli;
    }
}


echo "<pre>\n";

$obj = new ÜyeSınama;

$obj->a = 1;
echo $obj->a . "\n\n";

var_dump(isset($obj->a));
unset($obj->a);
var_dump(isset($obj->a));
echo "\n";

echo $obj->bildirilmiş . "\n\n";

echo "'gizli' isimli 'private' özellik ile bir deneme yapalım:\n";
echo "'private' özellikler sadece sınıf içinde görünürdürler,\n";
echo "bu yüzden __get() kullanılmaz...\n";
echo $obj->gizliyiOku() . "\n";
echo "'private' özellikler sınıf dışında görünür değildirler,\n";
echo "dolayısıyla __get() kullanılır...\n";
echo $obj->gizli . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
'a' adlı üyeye '1' atanıyor.
'a' adlı üyenin değeri isteniyor
1

'a' atanmış mı?
bool(true)
'' siliniyor
'a' atanmış mı?
bool(false)

1

'gizli' isimli 'private' özellik ile bir deneme yapalım:
'private' özellikler sadece sınıf içinde görünürdürler,
bu yüzden __get() kullanılmaz...
2
'private' özellikler sınıf dışında görünür değildirler,
dolayısıyla __get() kullanılır...
'gizli' adlı üyenin değeri isteniyor

Notice: <dosya> dosyasının 71. satırında __get() ile tanımsız özellik istendi: gizli
]]>
    </screen>

   </example>
   </sect2>

  <sect2 xml:id="language.oop5.overloading.methods">
   <title>Yöntemlerde aşırı yükleme</title>

   <methodsynopsis>
    <type>mixed</type><methodname>__call</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
    <methodparam><type>array</type><parameter>değiştirgeler</parameter></methodparam>
   </methodsynopsis>
   <methodsynopsis>
    <type>mixed</type><methodname>__callStatic</methodname>
    <methodparam><type>string</type><parameter>isim</parameter></methodparam>
    <methodparam><type>array</type><parameter>değiştirgeler</parameter></methodparam>
   </methodsynopsis>

   <para>
    <literal>__call()</literal>, erişilemeyen yöntemler bir nesne bağlamından
    çağrıldığında tetiklenir.
   </para>

   <para>
    <literal>__callStatic()</literal>, erişilemeyen yöntemler duruk bir
    bağlamdan çağrıldığında tetiklenir.
   </para>

   <para>
    <varname>$isim</varname> değiştirgesi çağrılan yöntemin ismidir.
    <varname>$değiştirgeler</varname> değiştirgesi ise
    <varname>$isim</varname> adlı yönteme aktarılan değiştirgeleri içeren
    numararalı bir dizidir.
   </para>

   <example>
    <title>- <code>__call</code> ve <code>___callStatic</code> ile aşırı
    yüklü örneklenmiş yöntemler</title>
    <programlisting role="php">
  <![CDATA[
<?php
class YöntemSınama {
    public function __call($isim, $değiştirgeler) {
        // Bilgi: $isim değeri büyük-küçük harfe duyarlıdır.
        echo "Nesnenin '$isim' yöntemi çağrılıyor: "
             . implode(', ', $değiştirgeler). "\n";
    }

    /**  PHP 5.3.0 ve sonrası  */
    public static function __callStatic($isim, $değiştirgeler) {
        // Bilgi: $isim değeri büyük-küçük harfe duyarlıdır.
        echo "Duruk yöntem '$isim' çağrılıyor: "
             . implode(', ', $değiştirgeler). "\n";
    }
}

$obj = new YöntemSınama;
$obj->deneBakalım('nesne bağlamında');

YöntemSınama::deneBakalım('duruk bağlamda');  // PHP 5.3.0 ve sonrası
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Nesnenin 'deneBakalım' yöntemi çağrılıyor: nesne bağlamında
Duruk yöntem 'deneBakalım' çağrılıyor: duruk bağlamda
]]>
    </screen>
   </example>

  </sect2>

 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->