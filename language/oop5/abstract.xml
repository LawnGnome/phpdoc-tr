<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- $Header: /home/svn/phpsvn_tmp/cvsrepo/phpdoc/tr/language/oop5/abstract.xml,v 1.3 2008-01-11 08:53:45 sezer Exp $ -->
 <sect1 xml:id="language.oop5.abstract" xmlns="http://docbook.org/ns/docbook">
  <title>Sınıf Soyutlama (Class Abstraction)</title>

  <para>
  PHP 5, soyut (abstract) sınıf ve metodların kullanımını mümkün kılmıştır.
  Soyut olarak tanımlanmış bir sınıftan örnek (instance) yaratılmasına izin
  verilmemektedir. Bir sınıf en az bir soyut metod içeriyorsa, o sınıf da
  soyut olarak tanımlanmalıdır. Soyut olarak tanımlanmış metodlar o metodun
  imzasıdır, uygulamanın bütünü temsil edemezler.
  </para>

  <para>
  Soyut bir sınıftan kalıtsal özellikleri devralırken, ana sınıfın tanımında
  soyut olarak belirtilmiş tüm metodların alt sınıf tarafından da tanımlanması
  gerekir. Ek olarak, bu metodların aynı (ya da daha düşük)
  <link linkend="language.oop5.visibility">görünürlükte</link>
  tanımlanması gereklidir. Örneğin, soyut metod protected olarak tanımlandı ise,
  kurulumu yapılan fonksiyon ya protected ya da public olarak tanımlanmalıdır.
  </para>

  <example>
   <title>Soyut sınıf örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
abstract class AbstractClass
{
    // Genişletilen sınıfı bu metodu tanımlamaya zorla
    abstract protected function getValue();
    abstract protected function prefixValue($prefix);

    // Ortak metod
    public function printOut() {
        print $this->getValue() . "\n";
    }
}

class ConcreteClass1 extends AbstractClass
{
    protected function getValue() {
        return "ConcreteClass1";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass1";
    }
}

class ConcreteClass2 extends AbstractClass
{
    public function getValue() {
        return "ConcreteClass2";
    }

    public function prefixValue($prefix) {
        return "{$prefix}ConcreteClass2";
    }
}

$class1 = new ConcreteClass1;
$class1->printOut();
echo $class1->prefixValue('FOO_') ."\n";

$class2 = new ConcreteClass2;
$class2->printOut();
echo $class2->prefixValue('FOO_') ."\n";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
ConcreteClass1
FOO_ConcreteClass1
ConcreteClass2
FOO_ConcreteClass2
]]>
   </screen>
  </example>

  <para>
  Kullanıcı tarafından tanımlanmamış  'soyut' ismini taşıyan sınıfları ve fonksiyonları
  içeren eski kodlar, bir değişikliğe gerek duyulmadan çalışabilir durumdadır.
  </para>
 </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
