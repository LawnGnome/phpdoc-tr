<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: nilgun Status: ready -->
<sect1 xml:id="language.types.float">
 <title><code>float</code></title>

 <para>
  Gerçek sayılar (veya kayan noktalı sayılar) şu sözdizimleri ile
  belirtilebilir:
 </para>

 <informalexample>
  <programlisting role="php">
<![CDATA[
<?php
$a = 1.234;
$b = 1.2e3;
$c = 7E-10;
?>
]]>
  </programlisting>
 </informalexample>

 <para>
  Biçimsel olarak:
 </para>

 <informalexample>
  <programlisting role="php">
<![CDATA[
LNUM          [0-9]+
DNUM          ([0-9]*[\.]{LNUM}) | ({LNUM}[\.][0-9]*)
USTEL_DNUM    [+-]?(({LNUM} | {DNUM}) [eE][+-]? {LNUM})
]]>
  </programlisting>
 </informalexample>

 <para>
  Bir gerçek sayının bellekte kapladığı genişlik platforma göre değişmekteyse
  de kabaca 14 hanelik bir hassasiyetle ~1.8e308'lik olası bir en büyük değer
  (64 bitlik IEEE biçemi) hepsi için sağlanır.
 </para>

 <warning xml:id="warn.float-precision">
  <title>Kayan nokta hassasiyeti</title>

  <para>
    Normal olarak, <literal>0.1</literal> veya <literal>0.7</literal> gibi
    basit ondalık sayılar az da olsa bir kayıp olmaksızın dahili ikil
    karşılıklarına dönüştürülemezler. Bunun şöyle bir sonucu olur: örneğin,
    <code>floor((0.1+0.7)*10)</code> işlevinden beklendiği gibi
    <literal>8</literal> değil, <literal>7</literal> döner; bunun sebebi
    dahili gösterimin aslında <literal role="infdec">7.9</literal> gibi bir
    değer olmasıdır.
  </para>

  <para>
    Bunun asıl sebebi, noktanın sağındaki rakam sayısı sonsuz olan bazı
    ondalık sayıları ifade etmekteki zorluktur. Örneğin,
    <literal>1/3</literal> ifadesinin ondalık sonucu <literal
    role="infdec">0.3</literal>'tür.
  </para>

  <para>
   Bu bakımdan, son ondalık hanesine bakarak sonucun ne olacağına karar
   verilemez, bu bakımdan kayan noktalı sayılar arasında asla eşitlik
   karşılaştırmaları yapılmaz. Eğer daha yüksek hassasiyet isteniyorsa <link
   linkend="ref.bc">keyfi hassasiyetli matematik işlevleri</link> ve <link
   linkend="ref.gmp">gmp</link> işlevleri kullanılabilir.
  </para>
 </warning>

 <sect2 xml:id="language.types.float.casting">
  <title><code>float</code> türüne dönüşüm</title>

  <para>
   <type>string</type> türleri <type>float</type> türlere dönüştürmek için
   gereken bilgileri <link linkend="language.types.string.conversion"
   >Dizgelerin sayılara dönüşümü</link> bölümünde bulabilirsiniz. Diğer
   türlerden <type>float</type> türüne dönüşüm için değer önce
   <type>integer</type> türüne dönüştürülür. Daha fazla bilgi için <link
   linkend="language.types.integer.casting"><literal>integer</literal> türüne
   dönüşüm</link> bölümüne bakınız. PHP 5 itibariyle, bir <type>object</type>
   tür <type>float</type> türe dönüştürülmeye çalışılırsa bir uyarı üretilir.
  </para>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
