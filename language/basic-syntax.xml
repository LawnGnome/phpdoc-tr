<?xml version="1.0" encoding="iso-8859-9"?>
<!-- $Revision: 1.4 $ -->
 <chapter xml:id="language.basic-syntax" xmlns="http://docbook.org/ns/docbook">
  <title>Temel sözdizimi</title>
  <sect1 xml:id="language.basic-syntax.phpmode">
   <title>HTML&apos;den Kaçmak</title>
   <para>
   PHP bir dosyayý okurken, hangi bölümü yorumlayýp hangi bölümü
   yorumlamadan geçeceðine açýlýþ ve kapanýþ etiketlerine bakarak
   karar verir. PHP&apos;nin bu þekilde çalýþýyor olmasý, çeþitli türde
   birçok belgenin içine gömülebilmesini saðlar, çünkü PHP baþlangýç
   ve bitiþ etiketlerinin dýþýnda kalan her þey PHP okuyucusu tarafýndan
   gözardý edilecektir. Çoðu zaman, bu örnekte olduðu gibi PHP&apos;nin
   HTML içine gömülmüþ olduðunu göreceksiniz.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<p>Bu bölüm gözardý edilecektir.</p>
<?php echo 'Bu bölüm PHP tarafýndan okunacaktýr.'; ?>
<p>Bu bölüm de gözardý edilecektir.</p>
]]>
     </programlisting>
    </informalexample>
   </para>
   <para>
   Daha geliþmiþ yapýlar da kullanmanýz mümkündür:
    <example>
     <title>Geliþmiþ kaçýþ</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($expression) { 
    ?>
    <strong>Bu doðru bir önermedir.</strong>
    <?php 
} else { 
    ?>
    <strong>Bu yanlýþ bir önermedir.</strong>
    <?php 
}
?>
]]>
     </programlisting>
    </example>
    Bu beklediðimiz gibi çalýþacaktýr, çünkü PHP ?&gt; kapanýþ
    etiketi ile karþýlaþtýðýnda, tekrar bir açýlýþ etiketi ile karþýlaþana
    kadar gördüðü herþeyin olduðu gibi çýktýsýný verecektir. Buradaki
    örnek oldukça basit, ancak büyük metin bloklarýný görüntülemek
    istediðimizde PHP&apos;yi yorumlama kipinden çýkartmak çoðu
    zaman tüm metni <function>echo</function> ya da
    <function>print</function> ile görüntülemekten daha verimlidir.
   </para>
   <para>
   PHP ile kullanýlabilecek dört açýlýþ ve kapanýþ etiketi çifti vardýr.
   Bunlardan ikisi, &lt;?php ?&gt; ve &lt;script language="php"&gt; &lt;/script&gt;
   her zaman kullanýlabilir durumdadýr. Diðer iki kýsa kullaným biçimi ve
   <productname>ASP</productname> stili etiketler, &php.ini; yapýlandýrma
   dosyayý içersinden açýlýp kapatýlabilir. Bazý kiþiler kýsa kullanýmý ve 
   <productname>ASP</productname> stili etiketleri daha kullanýþlý
   bulmaktadýrlar, ancak bu iki kullaným þekli daha az taþýnabilir olduklarýndan
   ötürü genellikle tavsiye edilmemektedir.
    <note>
     <para>
     Bir diðer önemli nokta, PHP'yi XML ya da XHTML içine gömmek istiyorsanýz
     standartlarla uyumlu kalabilmek için &lt;?php ?&gt; kullanýmýný uygulamalýsýnýz.
     </para>
    </note> 
   </para>
   <para>
    <example>
     <title>PHP Açýlýþ ve Kapanýþ Etiketleri</title>
     <programlisting role="php">
<![CDATA[
1.  <?php echo 'XHTML ya da XML belgeleri sunacaksanýz, bu yöntemi izleyin'; ?>

2.  <script language="php">
        echo 'bazý metin düzenleyiciler (FrontPage gibi) iþleme
	        komutlarýný sevmezler';
    </script>

3.  <? echo 'Bu en basit, SGML iþleme yöntemidir'; ?>
    <?= ifade ?> Bu "<? echo expression ?>" kullanýmý için kýsayoldur.

4.  <% echo 'Seçime baðlý olarak ASP tipi etiketleri kullanabilirsiniz'; %>
    <%= $degisken; # Bu "<% echo . . ." %> kullanýmý için kýsayoldur.
]]>
     </programlisting>
    </example>
   </para>
   <para>
   Bir ve iki numaralý örneklerde gözüken etiketler her zaman kullanýlabilirler,
   birinci örnek en geniþ kullanýma sahiptir ve ikisi arasýnda en çok tercih edilendir.
   </para>
   <para>
   Kýsa etiketler (örnek üç) yalnýzca &php.ini; içersindeki
   <link linkend="ini.short-open-tag">short_open_tag</link> yapýlandýrma
   direktifi etkinleþtirildiðinde ya da PHP <option>--enable-short-tags</option>
   seçeneði ile yapýlandýrýldýðýnda kullanýlabilirler.
    <note>
     <para>
     PHP 3 kullanýyorsanýz, kýsa etiketleri <function>short_tags</function>
     fonksiyonu ile etkinleþtirebilirsiniz. <emphasis>Bu
      yalnýzca PHP 3 için geçerlidir!</emphasis>
     </para>
    </note>
   </para>    
   <para>
    <productname>ASP</productname> tipi etiketler (örnek dört)
    &php.ini; dosyasýndaki <link linkend="ini.asp-tags">asp_tags</link>
    yapýlandýrma direktifi etkinleþtirildiðinde kullanýlabilirler.
    <note>
     <para>
      <productname>ASP</productname> etiketleri için destek
      3.0.4 sürümü ile eklenmiþtir.
     </para>
    </note>
   </para>
   <para>
    <note>
     <para>
     Geliþtirdiðiniz uygulamalarý ya da kütüphaneleri baþkalarýna daðýtacaksanýz
     ya da bu uygulamalarý sizin kontrolünüz altýnda olmayan PHP sunucularýna
     kuracaksanýz kýsa etiketleri kullanmaktan kaçýnmalýsýnýz, çünkü hedef sunucu
     kýsa etiketleri desteklemiyor olabilir. Taþýnabilir, yeniden daðýtýlabilir kod için,
     kýsa etiketleri kullanmadýðýnýzdan emin olun.
     </para>
    </note>
   </para>
  </sect1>
  <sect1 xml:id="language.basic-syntax.instruction-separation">
   <title>Komut ayrýmý</title>
   <para>
   C ya da Perl'de olduðu gibi, PHP komutlarýn her bir deyimin sonuna konulacak
   noktalý virgülle ayrýlmasýný ister. Bir PHP kod bloðunun sonunda yer alan
   kapanýþ etiketi otomatik olarak bir noktalý virgül iþlevi görür; bir PHP bloðunun
   son satýrýnýn sonuna noktalý virgül koymanýza gerek yoktur. Kapanýþ etiketi
   ayný zamanda yeni satýr karakterini de kendisi ekleyecektir.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo 'Bu bir testtir';
?>

<?php echo 'Bu bir testtir' ?>

<?php echo 'Son kapanýþ etiketini atladýk';
]]>
     </programlisting>
    </informalexample>
    <note>
     <para>
     Dosya sonunda PHP kapanýþ etiketi kullanmak seçime baðlýdýr ve
     <function>include</function> ya da <function>require</function>
     gibi fonksiyonlarýn kullanýmýnda yardýmcý olabilir, böylelikle dosya sonlarýnda
     istemdýþý oluþabilen boþ satýrlar meydana gelmez ve sonrasýnda cevap ile
     birlikte yeni baþlýk bilgileri ekleme þansýnýz sürer. Bu özellik çýktý tamponlama (output
     buffering) kullanýp da eklenti (include) yaptýðýnýz dosyalarýn son kýsmýnda oluþan istenmeyen
     boþ satýrlarý görmek istemediðinizde de kullanýþlýdýr.
     </para>
    </note>
   </para> 
  </sect1>
  <sect1 xml:id="language.basic-syntax.comments">
   <title>Yorumlar</title>   
   <para>
   PHP 'C', 'C++' ve Unix kabuk-tipi (Perl tipi) yorumlarý destekler. Örneðin:

    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
    echo 'Bu bir testtir'; // Bu tek satýrlýk c++ tipi yorumdur
    /* Bu çoklu satýr yorumudur
       diðer bir yorum satýrý */
    echo 'Bu bir diðer testtir';
    echo 'Son Bir Test'; # Bu tek satýrlýk kabuk-tipi yorumdur
?>
]]>
     </programlisting>
    </informalexample>
   </para>
   <simpara>
   "Tek satýrlýk" yorum tipi yalnýzca satýr sonuna ya da PHP kod bloðunun sonuna
   kadar yorumlama yapar. Bu demektir ki <literal>// ... ?&gt;</literal>  ya da
   <literal># ...  ?&gt;</literal> kullanýmýndan sonra gelecek HTML kodu YAZDIRILACAKTIR:
   ?&gt; PHP kipinden çýkýlmasýna sebep olup ve HTML kipine dönüþü saðlar,
   <literal>//</literal> ya da <literal>#</literal>bu alaný etkileyemez.
   <link linkend="ini.asp-tags">Asp_tags</link> yapýlandýrma direktifi etkinleþtirilmiþse,
   <literal>// %&gt;</literal> ve <literal># %&gt;</literal> gibi çalýþýr.
   </simpara>
   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<h1>Bu bir <?php # echo 'örnek';?> örnektir.</h1>
<p>Yukarýdaki baþlýk 'Bu bir örnektir' diyecektir.</p>
]]>
     </programlisting>
    </informalexample> 
   </para>
   <simpara>
   'C' tipi yorumlar ilk <literal>*/</literal> ile karþýlaþýldýðýnda sona erer.
   'C' tipi yorumlarý iç içe kullanmamalýsýnýz. Büyük kod bloklarýný yorum kapsamýna
   alýrken bu hatayý yapmanýz daha kolaylaþýr.
   </simpara>
   <para>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
 /* 
    echo 'Bu bir testtir'; /* Bu yorum probleme sebep olacaktýr */
 */
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect1>
 </chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
