<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- $Header: /home/svn/phpsvn_tmp/cvsrepo/phpdoc/tr/security/apache.xml,v 1.1 2008-01-11 07:27:43 sezer Exp $ -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
  <chapter xml:id="security.apache" xmlns="http://docbook.org/ns/docbook">
   <title>Apache'ye modül olarak kurulum</title>
   <simpara>
    PHP'yi Apache içinde modül olarak kurduğunuzda, sistemde Apache'yi
    çalıştıran kullanıcın haklarına sahip olur. Genellikle bu kullanını
    'nobody' kullanıcısıdır. Bu durumun güvenlik konusunda çeşitli etkileri
    olabilir. Örneğin: PHP ile bir bir dosyayı okumanız veya ek şifre gerektirmeyen
    bir veritabanına erişim gerekliyse, Apache kullanıcısının bu dosyaya
    erişim hakkı olması gerekir. Bundan dolayı da başka bir uygulama
    Apache kullanıcı olarak çalışarak aynı şeyi yetkisiz olarak yapabilir.

    Bu demektir ki aynı kullanıcı haklarıyla çalışan benzeri bir uygulama,
    dosyaları okuyabilir, silebilir ve veritabanına ulaşabilir. Bu gibi risklerden
    korunmak için bu tip uygulamaları şifre koruması altına almanız faydalı olur.

    LDAP, &htaccess; dosyaları veya uygulamanızda yazacağınız ek kodlar ile
    erişimin kısıtlanması ve yetkilendirilmesi mümkündür.
   </simpara>
   <simpara>
    Güvenliğin sağlanması, PHP'nin tamamen etkisiz hale getirilmesi, dosya yazma,
    veritabanı erişiminin kısıtlanması demek değildir. Bunlar sağlanırsa
    güvenli bir işlem ortamı oluşmuş olabilir ancak PHP özellikleri kaybolmuş olur.
   </simpara>
   <simpara>
    Buna zıt olarak Apache'yi kök kullanıcı(root) olarak çalıştırmak, PHP kullanımı
    ve yetisini sınırsız arttırmasına rağmen çok riskli ve gereksizdir.
   </simpara>
   <simpara>
    Kök kullanıcı yetkileriyle çalışan Apache sunucu kötü kullanıma uygunsa çok tehlikelidir.
    Yetkisiz kişiler sisteme, veritabanınıza ve kullanıcı bilgilerine ulaşabilir.
    Daha kötüsü bu bilgileri silebilir ve yedekleme sisteminiz yoksa bu büyük bir kayıp olabilir.
    Daha da kötüsü yetkisiz kişiler sisteme truva atı yerleştirip yaptığınız tüm
    işlemleri uzun süre bir ajan gibi izleyebilir. Önemli hiçbir bilgi olmasa
    dahi sisteminizin güvenliğini sağlayınız.
   </simpara>
   <simpara>
    PHP bazı çözümleri de ihtiva etmektedir. Mesela
    <link linkend="ini.open-basedir">open_basedir</link> ayarı ile PHP'den erişilebilecek
    dizinleri tanımlayabilirsiniz. Ayrıca Apache erşim bölgesi tanımlayarak İnternet
    sayfalarının belirli bir alanda sınırlandırılması, diğer sistem dizinlerine erişmesi
    engellenebilir.
   </simpara>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
