<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.10 Maintainer: volkan Status: wip -->
<!-- CREDITS: sezer -->
  <chapter xml:id="security.magicquotes" xmlns="http://docbook.org/ns/docbook">
   <title>Sihirli Tırnak</title>
   &warn.deprecated.removed-6-0-0;
   <para>
    Sihirli Tırnak özel karakterlerin önüne otomatik olarak çıkış karakteri konması ve
    bu şekilde bütünlüğünün korunmasıdır. Bu özellik kullanıcıdan gelen bilgiyi değiştirebilir,
    veritabanı işlemlerinde de değişiklik yapabilir. Bundan dolayı bazı karışıklıklara
    sebep olduğu için kullanılmaması tavsiye edilir. Bu özelliği kapatıp çıkış karakterlerini
    kendiniz ilgili fonksiyonları çağırarak yapabilirsiniz.
   </para>

   <sect1 xml:id="security.magicquotes.what">
    <title>Sihirli Tırnak nedir?</title>
    <para>
     Açık olduğunda tüm <literal>'</literal> (tek tırnak), <literal>"</literal>
     (çift tırnak), <literal>\</literal> (ters taksim) and <literal>NULL</literal> (YOKLUK)
     karakterierinin önüne otomatik olarak ters taksim karakteri eklenir. Bu işlem
     <function>addslashes</function> fonksiyonunun yaptığı işle aynıdır.
    </para>
    <para>
     Toplam üç adet sihirli tırnal ayarı vardır:
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
      </simpara>
      <simpara>
       Bu ayar HTTP bilgi isteği (GET, POST, ve COOKIE bilgileri) ile ilgilidir. Çalışma zamanlı
       olarak değiştirilmez, uygulamanız çalışmadan önce, yani konfigürasyon dosyasında değiştirmelisiniz.
       Temel değeri <emphasis>on</emphasis> yani açıktır.
      </simpara>
      <simpara>
       Ayrıca <function>get_magic_quotes_gpc</function> sayfasına bakınız.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
      </simpara>
      <simpara>
       Açık olduğunda bilgi getiren çoğu fonksiyonda etki eder ve özel karakterlere ters taksim
       kullanılarak çıkış uygulanır. Veritabanı fonksiyonları da dahil olmak
       üzere dış kaynaktan bilgi getiren fonksiyonlar bundan etkilenir.
       Çalışma zamanlı olarak değiştirilebilir. Temel değeri <emphasis>off</emphasis> yani kapalıdır.
      </simpara>
      <simpara>
       Ayrıca <function>set_magic_quotes_runtime</function> ve
       <function>get_magic_quotes_runtime</function> sayfalarına bakınız.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>
      </simpara>
      <simpara>
       Açık olduğunda tek tırnak karakterine çıkış işlemi yapılırken ters taksim değil,
       yine tek tırnak karakteri kullanılır. Açık olduğunda <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
       ayarını da etkile ve üzerinde önem kazanır.
       Eğer her iki ayar da açıksa, sadece tek tırnak karakterleri <literal>''</literal>
       olarak ayarlanacak, çift tırnak, ters taksim ve NULL (YOKLUK) olduğu gibi kalacak ve çıkış işlemi
       uygulanmayacaktır.
      </simpara>
      <simpara>
       Ayrıca <function>ini_get</function> fonksiyonuna bakıp bu ayarların değerlerini nasıl kontrol edeceğinizi öğrenin.
      </simpara>
     </listitem>
    </itemizedlist>
   </sect1>

   <sect1 xml:id="security.magicquotes.why">
    <title>Neden Sihirli Tırnak kullanılır?</title>
    <itemizedlist>
     <listitem>
      <simpara>
       Yeni başlayanlar için faydalı olabilir. (Yine de pek tavsiye edilmez)
      </simpara>
      <simpara>
       Sihirli tırnak PHP&apos;yi daha kolay kullanmak, güvenliğini sağlamak amacıyla
       eklenmiştir. Ancak bu kullanılsa dahi <link linkend="security.database.sql-injection">SQL Enjeksiyon</link>
       riski azalmış olsa dahi hala vardır.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Kolaylık
      </simpara>
      <simpara>
       Veritabanına bilgi eklerken sihirli tırnak özelliği otomatik olarak <function>addslashes</function>
       fonksiyonunu tüm $_GET, $_POST ve $_COOKIE bilgi dizilerine uygular.
      </simpara>
     </listitem>
    </itemizedlist>
   </sect1>

   <sect1 xml:id="security.magicquotes.whynot">
    <title>Neden Kullanılmamalıdır?</title>
    <itemizedlist>
     <listitem>
      <simpara>
       Uyumluluk
      </simpara>
      <simpara>
       Bu özelliğin açık veya kapalı olması tüm uygulamanızın davranışını değiştirir.
       <function>get_magic_quotes_gpc</function> tüm bilgileri farklı hale getirebilir.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Başarım
      </simpara>
      <simpara>
       Her gelen bilginin veritabanına eklenmesi veya kullanılması şart değildir. Ancak
       sihirli tırnak tüm bilgiyi sanki kullanılacak gibi çıkış işlemine sokar.
       Bundan dolayı sihirli tırnak yerine <function>addslashes</function> kullanarak
       kontrolü elinizde tutunuz.
      </simpara>
      <simpara>
       PHP ile gelen konfigürasyon dosyası <filename>php.ini-dist</filename> bu özelliği
       açık bırakmış olabilir. Ancak tavsiye edilen dosya <filename>php.ini-recommended</filename>
       bu özelliği kapalı tutar ve bu dosyayı kullanmanız tavsiye edilir. Ayrıca varolan konfigürasyon
       dosyanızı da değiştirip bu özelliği kapatabilirsiniz.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Uygunsuzluk
      </simpara>
      <simpara>
       Her bilginin çıkış işlemine tabi tutulması gerekli değildir. Bundan dolayı bazen
       gereksiz bilgiler de değişir ve zarar görür. Örneğin yazı göndermeye yarayan bir
       formda birçok tırnak ve çift tırnak görülebilir. Ancak bu bilgiler e-posta ile
       gönderilecekse değişikliğe ve çıkış işlemine hiç gerek yoktur. Bu durumda
       <function>stripslashes</function> fonksiyonunu kullanıp ters çıkış işlemi yapmak
       zorunda kalırsınız.
      </simpara>
     </listitem>
    </itemizedlist>
   </sect1>

   <sect1 xml:id="security.magicquotes.disabling">
    <title>Sihirli Tırnak Kapatılması</title>
    <para>
     Belirtilen <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
     çalışma zamanlı olarak değiştirilemez, bu sebeple konfigürasyon dosyasından değiştirilmesi gerekir.
     Yani <function>ini_set</function> fonksiyonu bu ayara etki etmez.
    </para>
    <para>
     <example>
      <title>Konfigürasyondan değiştirme</title>
      <para>
       Aşağıda &php.ini; içinde <literal>Off</literal> kapatmaya yönelik bir örnek verilmiştir.
       Daha fazla detay için kılavuzun <link linkend="configuration.changes">Konfigürasyon ayarlarını değiştirme</link> bölümüne bakınız.
      </para>
      <screen>
<![CDATA[
; Magic quotes
;

; Magic quotes for incoming GET/POST/Cookie data.
magic_quotes_gpc = Off

; Magic quotes for runtime-generated data, e.g. data from SQL, from exec(), etc.
magic_quotes_runtime = Off

; Use Sybase-style magic quotes (escape ' with '' instead of \').
magic_quotes_sybase = Off
]]>
      </screen>
      <para>
       Eğer sunucuda konfigürasyon dosyasına erişim ve değişiklik mümkün değilse, Apache kullanıcıları için
       <filename>.htaccess</filename> dosyası kullanımı mümkündür. Mesela:
      </para>
      <screen>
<![CDATA[
php_flag magic_quotes_gpc Off
]]>
      </screen>
     </example>
    </para>
    <para>
     Her konfigürasyona uyumlu yazılım geliştirme amacıyla sunucu ayarlarının
     değişmesinin mümkün olmadığı durumlar için aşağıda <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
     ayarının nasıl kapalı gibi işleme konduğunu gösteren bir örnek verilmiştir.
     Bu yol fevkalade verimsizdir ve hantaldır ancak yazılan kodun sihirli tırnak
     ayarına bağlı olmaması amaçlanıyorsa kullanılabilir.
    </para>
    <para>
     <example>
      <title>Çalışma zamanlı olarak sihirli tırnak kapatma</title>
      <programlisting role="php">
<![CDATA[
<?php
if (get_magic_quotes_gpc()) {
    function stripslashes_deep($value)
    {
        $value = is_array($value) ?
                    array_map('stripslashes_deep', $value) :
                    stripslashes($value);

        return $value;
    }

    $_POST = array_map('stripslashes_deep', $_POST);
    $_GET = array_map('stripslashes_deep', $_GET);
    $_COOKIE = array_map('stripslashes_deep', $_COOKIE);
    $_REQUEST = array_map('stripslashes_deep', $_REQUEST);
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </sect1>

  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
