<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.16 Maintainer: nilgun Status: ready -->
<refentry xml:id='function.domnode-append-child' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DomNode::append_child</refname>
  <refpurpose>Düğüme en küçük çocuk olarak bir çocuk ekler</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>DOMNode</type><methodname>DomNode::append_child</methodname>
   <methodparam><type>DOMNode</type><parameter>yeniDüğüm</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bu işlev mevcut çocukların sonuna bir çocuk daha ekler. Eğer düğümün hiç
   çocuğu yoksa yeni bir çocuk listesini oluşturulur.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>yeniDüğüm</parameter></term>
     <listitem>
      <para>
       Eklenecek düğüm; <methodname>DomDocument::create_element</methodname>,
       <methodname>DomDocument::create-text-node</methodname> gibi
       işlevlerle oluşturulabilir veya başka bir düğüm kullanılabililir.
      </para>
      <note>
       <para>
        Bu yöntemi kullanarak düğüme yeni bir bir öznitelik ekleyemezsiniz.
        Bunun için <methodname>DomElement::set_attribute</methodname>
        yöntemini kullanmalısınız.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   İşlem başarılı olursa eklenen düğüm, olmazsa &false; döner.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Başka bir belgenin düğümünün eklenmesine artık izin verilmiyor.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        PHP 4.3.0 öncesinde, yeni çocuk eklenmeden önce bir kopyası
        yapılırdı. Böylece işleve aktarılan düğüme dokunulmadan kopyası
        üzerinde değişiklik yapılabilirdi. Aktarılan düğümün kendi çocukları
        varsa onlar da kopyalanırdı. Böylece bir XML belgeyi büyük parçalar
        halinde kopyalamak kolay olurdu. Yöntemin dönüş değeri eklenen düğüm
        olurdu. Eklenen düğüm üzerinde değişiklik yapmak için bu dönüş
        değerini kullanmak gerekirdi (işleve aktarılanı değil).
       </entry>
      </row>
      <row>
       <entry>4.3.0 ve 4.3.1</entry>
       <entry>
        Yeni düğüm eklenmeden önce, ekleneceği bağlamda zaten mevcutsa eski
        düğüm silinir. Böylece yeni düğüm taşınırken artık bir kopyasının
        yapılmasına gerek kalmaz. Bu davranış W3C DOM belirtimine uygundur.
        Eski davranışı tercih ediyorsanız bu yöntemi çağırmadan önce bir
        <methodname>DomNode::clone_node</methodname> çağrısı yapmalısınız.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Yeni düğüm eklenmeden önce, ekleneceği ağaçta zaten mevcutsa eski
        düğüm silinir. PHP 4.3.1 sürümündeki davranış uygulanır.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Aşağıdaki örnekte yeni bir belgeye bir eleman düğümü eklendikten sonra
   elemanın <literal>align</literal> özniteliğine <literal>left</literal>
   değeri atanmaktadır.
  </para>
  <para>
   <example>
    <title>- Bir çocuk düğüm eklemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$newnode = $doc->append_child($node);
$newnode->set_attribute("align", "left");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Yukarıdaki örnek şöyle de yazılabilirdi:
  </para>
  <para>
   <example>
    <title>- Bir çocuk eklemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = domxml_new_doc("1.0");
$node = $doc->create_element("para");
$node->set_attribute("align", "left");
$newnode = $doc->append_child($node);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Aşağıda daha karmaşık bir örneğe yer verilmiştir. Önce belli bir eleman
   aranmakta, sonra bu eleman çocukları ile birlikte bir kopyası yapılıp bir
   kardeş düğüm olarak eklenmektedir. Son olarak eklenen elemana bir
   öznitelik atanmakta ve tüm belge çıktılanmaktadır.
  </para>
  <para>
   <example>
    <title>- Bir düğümü kendine kardeş olarak eklemek</title>
    <programlisting role="php">
<![CDATA[
<?php
include("example.inc");

if (!$dom = domxml_open_mem($xmlstr)) {
  echo "Belge çözümlenirken hata oluştu\n";
  exit;
}

$elements = $dom->get_elements_by_tagname("informaltable");
print_r($elements);
$element = $elements[0];

$parent = $element->parent_node();
$newnode = $parent->append_child($element);
$children = $newnode->children();
$attr = $children[1]->set_attribute("align", "left");

$xmlfile = $dom->dump_mem();
echo htmlentities($xmlfile);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Yukarıdaki örnek <methodname>DomNode::append-child</methodname> yerine
   <methodname>DomNode::insert_before</methodname> kullanarak da
   yazılabilirdi.
  </para>
 </refsect1>
 <refsect1 role="migration">
  <title>PHP 5&apos;e yükseltme</title>
  <para>
   <methodname>DomNode::appendChild</methodname> yöntemini kullanın.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DomNode::insert_before</methodname></member>
    <member><methodname>DomNode::clone_node</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
