<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: sinan Status: ready -->
<appendix xml:id="apd.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="apd.examples.usage">
  <title>PHP-APD&apos;yi betiklerde kullanmak</title>
  <procedure>
   <step>
    <para>
     İzlemeyi başlatmak için PHP betiğinizin ilk satırında <function>apd_set_pprof_trace</function> işlevini çağırın.
    </para>
    <informalexample>
     <programlisting role="php">
 <![CDATA[
 apd_set_pprof_trace();
 ]]>
     </programlisting>
    </informalexample>
    <para>
     İşlevi betiğinizdeki herhangi bir satıra da ekleyebilirsiniz, fakat eğer
     izlemeye betiğinizin başından başlamazsanız diğer şekilde sizi bir başarım
     dar boğazına sürükleyebilecek olan profil bilgisini atmış olacaksınız.
    </para>
   </step>
   <step>
    <para>
     Şimdi betiği çalıştırın. Döküm çıktısı
     <filename>apd.dumpdir/pprof_pid.ext</filename> dosyasına yazılacaktır.
     <tip>
     <para>
       Eğer PHP&apos;nin CGI sürümünde çalışıyorsanız, apd&apos;nin doğru
       şekilde çalışması için &apos;-e&apos; seçeneğini kullanarak
       genişletilmiş bilgiyi etkinleştirmeniz gerekecek. Örneğin:
       <userinput>php -e -f script.php</userinput>
     </para>
     </tip>
    </para>
   </step>
   <step>
    <para>
     Biçimlendirilmiş profil bilgisini göstermek için,
     <command>pprofp</command> komutunu istediğiniz sıralama ve gösterme
     seçenekleri ile çalıştırın. Biçimlendirilmiş çıktı aşağıdaki gibi
     görünecektir:
    </para>
    <informalexample>
     <screen>
<![CDATA[
bash-2.05b$ pprofp -R /tmp/pprof.22141.0

Trace for /home/dan/testapd.php
Total Elapsed Time = 0.00
Total System Time  = 0.00
Total User Time    = 0.00


Real         User        System             secs/    cumm
%Time (excl/cumm)  (excl/cumm)  (excl/cumm) Calls    call    s/call  Memory Usage Name
--------------------------------------------------------------------------------------
100.0 0.00 0.00  0.00 0.00  0.00 0.00     1  0.0000   0.0009            0 main
 56.9 0.00 0.00  0.00 0.00  0.00 0.00     1  0.0005   0.0005            0 apd_set_pprof_trace
 28.0 0.00 0.00  0.00 0.00  0.00 0.00    10  0.0000   0.0000            0 preg_replace
 14.3 0.00 0.00  0.00 0.00  0.00 0.00    10  0.0000   0.0000            0 str_replace
]]>
     </screen>
    </informalexample>
    <para>
     Bu örnekte kullanılan -R seçeneği profil tablosunu betiğin verili işlevi
     yürütürken kullandığı gerçek zaman miktarına göre sıralar. "cumm call"
     sütunu her işlevin ortalama kaç kez çağrıldığını, "s/call" sütunu da her
     işlev çağrısı için ortalama kaç saniye gerektiğini gösterir
    </para>
   </step>
   <step>
    <para>
    KCacheGrind profil çözümleme uygulamasına aktarabileceğiniz bir çağrı-ağacı
    dosyası oluşturmak için, <command>pprof2calltree</command> komutunu verin.
    </para>
   </step>
  </procedure>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

