<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<refentry xml:id="function.pdo-pgsqllobcreate" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::pgsqlLOBCreate</refname>
  <refpurpose>Yeni bir büyük nesne oluşturur</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>PDO::pgsqlLOBCreate</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>PDO::pgsqlLOBCreate</function> yöntemi bir büyük nesne oluşturup
   bu nesnenin nesne kimliğini (OID) döndürür. Bu nesne üzerinde okuma/yazma
   işlemleri yapmak için <function>PDO::pgsqlLOBOpen</function> ile nesneye
   bir akım açabilirsiniz. Satırın anlamsız şekilde büyümemesi için nesne
   kimliği OID türündeki sütunlarda saklanabilir ve nesneye erişmek için bu
   OID kullanılabilir. Büyük nesneler <function>PDO::pgsqlLOBUnlink</function>
   çağrılarıyla silinmedikleri sürece veritabanında saklanırlar.
  </para>
  <para>
   Büyük nesneler en fazla 2GB büyüklükte olabilirler, fakat bu derece büyük
   bir nesne kullanışsızdır. Veritabanınızdan OID'i içeren satırı silmeden
   önce nesneyi silmek için <function>PDO::pgsqlLOBUnlink</function> çağrısı
   yapmayı unutmayın. Ayrıca, büyük nesnelere erişim denetlenemez. Bunun
   yerine <literal>bytea</literal> sütun türünü deneyebilirsiniz.
   PostgreSQL'in son sürümleri <literal>bytea</literal> türündeki alanlarda
   1GB'a kadar büyüklüğe izin vermekte ve en uygun satır boyutuyla saklamak
   için şeffaf olarak yönetilebilmektedir.
  </para>
  <note>
   <simpara>
    Bu işlevin bir toplu hareketin içinden çağrılması gerekir.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <function>PDO::pgsqlLOBCreate</function> işlevinin değiştirgesi yoktur.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Başarısızlık durumunda &false;, yoksa oluşturulan büyük nesnenin nesne
   kimliği döner.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>PDO::pgsqlLOBCreate</function> örneği</title>
    <para>
     Bu örnekte bir büyük nesne oluşturulmakta ve içeriği bir dosyaya
     kopyalanmaktadır. Ardından nesne kimliği bir tabloda saklanmaktadır.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$db = new PDO('pgsql:dbname=test host=localhost', $user, $pass);
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->beginTransaction();
$oid = $db->pgsqlLOBCreate();
$stream = $db->pgsqlLOBOpen($oid, 'w');
$local = fopen($filename, 'rb');
stream_copy_to_stream($local, $stream);
$local = null;
$stream = null;
$stmt = $db->prepare("INSERT INTO BLOBS (ident, oid) VALUES (?, ?)");
$stmt->execute(array($some_id, $oid));
$db->commit();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::pgsqlLOBOpen</function></member>
    <member><function>PDO::pgsqlLOBUnlink</function></member>
    <member><function>pg_lo_create</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
