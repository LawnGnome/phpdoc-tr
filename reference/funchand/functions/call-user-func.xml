<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.20 Maintainer: onurozgurozkan Status: ready -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.20 -->
<refentry xml:id="function.call-user-func" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func</refname>
  <refpurpose>İlk değiştirgede belirtilen kullanıcı işlevini çağırır
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func</methodname>
   <methodparam><type>callback</type><parameter>işlev</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>değiştirge</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>işlev</parameter> değiştirgesi ile belirtilen kullanıcı tanımlı
   işlevi çağırır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>işlev</parameter></term>
     <listitem>
      <para>
       Çağırılacak işlev. Ayrıca, bu değiştirgede sınıf yöntemlerinin
       <literal>array($sınıfadı, $yöntemadı)</literal> biçiminde belirtilmek
       suretiyle durağan olarak çağrılması da mümkündür.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>değiştirge</parameter></term>
     <listitem>
      <para>
       İşleve sıfır veya daha fazla sayıda değiştirge aktarılabilir.
      </para>
      <note>
       <para>
        <function>call_user_func</function> işlevi gönderimli değiştirgeleri
        aktarmaz.
        <informalexample>
         <programlisting role="php">
<![CDATA[
<?php
function say(&$sayı)
{
    $sayı++;
}

$a = 0;
call_user_func('say', $a);
echo $a; // 0

call_user_func_array('say', array(&$a)); // Yerine bunu kullanın
echo $a; // 1
?>
]]>
         </programlisting>
        </informalexample>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Hata oluşmamışsa işlevin sonucunu aksi takdirde &false; döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>call_user_func</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
function berber($tür)
{
    echo "Demek $tür kesimi istiyorsunuz, sorun yok.";
}
call_user_func('berber', "saç");
call_user_func('berber', "sakal");
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- İsim alanı ismi kullanarak <function>call_user_func</function></title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Mesela;

class Misal {
    static public function dnm() {
        print "Merhaba Dünyalı!\n";
    }
}

// PHP 5.3.0 ve sonrası
call_user_func(__NAMESPACE__ .'::Misal::dnm');
// Merhaba Dünyalı!

// PHP 5.3.0 ve sonrası
call_user_func(array(__NAMESPACE__ .'::Misal', 'dnm'));
// Merhaba Dünyalı!

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- Sınıf yöntemi ile kullanım</title>
    <programlisting role="php">
<![CDATA[
<?php

class Sınıfım {
    static function selam_ver()
    {
        echo "Merhaba!\n";
    }
}

$sınıfadı = "Sınıfım";

call_user_func(array($sınıfadı, 'selam_ver'));
call_user_func($sınıfadı .'::selam_ver'); // PHP 5.2.3 ve sonrası

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- Lamda işlevi olarak kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php
// PHP 5.3.0 ve sonrası
call_user_func(function($arg) { print "[$arg]\n"; }, 'test');
// [test]

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func_array</function></member>
    <member><function>is_callable</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
