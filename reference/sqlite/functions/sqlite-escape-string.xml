<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.sqlite-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_escape_string</refname>
  <refpurpose>Bir sorgu değiştirgesi olarak kullanmak üzere bir dizgeyi önceler</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sqlite_escape_string</methodname>
   <methodparam><type>string</type><parameter>öğe</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bir SQLite deyiminde kullanmak için <parameter>öğe</parameter> ile
   belirtilen dizgeye önceleme uygular. Buna tek tırnakların tek tırnaklarla
   öncelenmesi ve ikil olarak güvenilir olmayan karakterlerin uygun şekilde
   öncelenmesi dahildir.
  </para>
  <para>
   Kodlamak suretiyle verinin güvenle yerleştirilmesini sağlasa da basit metin
   karşılaştırmalarıyla bunu yaptığından, <literal>LIKE</literal> deyimlerinde
   olduğu gibi ikil veri içeren sütunlar için kullanışsızdır. Uygulamada, böyle
   şeyleri ikil sütunlarda saklamamanız gerektiğinden (aslında ikil verileri
   başka bir yerde örneğin dosyalarda saklamanız daha iyidir) bunun bir sorun
   olmaması gerekir.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>öğe</parameter></term>
     <listitem>
      <para>
       Öncelenecek dizge.
      </para>
      <para>
       Belirtilen dizge bir <literal>NUL</literal> karakteri içeriyorsa veya
       <literal>0x01</literal> karakteri ile başlıyorsa PHP'nin uygulayacağı
       ikil kodlama şemasından dolayı böyle ikil verileri rahatça alıp
       saklayabilirsiniz.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir SQLite deyiminde kullanmak üzere bir öncelenmiş dizge döndürür.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    <function>sqlite_create_function</function> veya
    <function>sqlite_create_aggregate</function> kullanılarak oluşturulmuş
    kullanıcı tanımlı bir işlevden dönen bir değeri kodlamak için bu işlevi
    değil <function>sqlite_udf_encode_binary</function> işlevini kullanın.
   </simpara>
  </note>
  <warning>
   <simpara>
    SQLite sorgularında kullanacağınız dizgeler için
    <function>addslashes</function> işlevini <emphasis>kullanmayın</emphasis>;
    veriyi veritabanından alırken tuhaf sonuçlar verebilir.
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_udf_encode_binary</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
