<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.sqlite-udf-decode-binary" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_udf_decode_binary</refname>
  <refpurpose>Kullanıcı tanımlı bir işleve değiştirge olarak aktarılacak ikil
  veriyi çözümler</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>sqlite_udf_decode_binary</methodname>
   <methodparam><type>string</type><parameter>veri</parameter></methodparam>
  </methodsynopsis>
  <para>
   Kullanıcı tanımlı bir işleve (<acronym>UDF</acronym>) değiştirge olarak
   aktarılacak ikil veriyi çözümler.
  </para>
  <para>
   İkil verilerin güvenli hale getirilmesi için PHP devreye sokulmuşsa ikil
   içeriğin tekrar işe yarar hale gelmesi için bu veriyi kullanıcı tanımlı
   işlevinize aktarırken bu işlevle tekrar eski haline getirmeniz gerekir.
  </para>
  <para>
   PHP başarımı etkilediğinden bu kodlama ve kod çözme işlemlerini özdevinimli
   olarak uygulamaz.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       <function>sqlite_udf_encode_binary</function> veya
       <function>sqlite_escape_string</function> tarafından kodlanmış ikil veri.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Kodu çözülmüş dizge.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- İkil olarak güvenli <literal>azami_uzunluk</literal> işlevi örneği
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$data = array(
   'one',
   'two',
   'three',
   'four',
   'five',
   'six',
   'seven',
   'eight',
   'nine',
   'ten',
   );
$db = sqlite_open(':memory:');
sqlite_query($db, "CREATE TABLE strings(a)");
foreach ($data as $str) {
    $str = sqlite_escape_string($str);
    sqlite_query($db, "INSERT INTO strings VALUES ('$str')");
}

function azami_uzunluk_sek(&$baglam, $dizge)
{
    $dizge = sqlite_udf_decode_binary($string);
    if (strlen($dizge) > $baglam) {
        $baglam = strlen($dizge);
    }
}

function azami_uzunluk_son(&$baglam)
{
    return $baglam;
}

sqlite_create_aggregate($db, 'azami_uzunluk',
        'azami_uzunluk_sek', 'azami_uzunluk_son');

var_dump(sqlite_array_query($db, 'SELECT max_len(a) from strings'));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_udf_encode_binary</function></member>
    <member><function>sqlite_create_function</function></member>
    <member><function>sqlite_create_aggregate</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
