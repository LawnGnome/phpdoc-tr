<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: aydin Status: ready -->
<!-- splitted from ./en/functions/com.xml, last change in rev 1.12 -->
<refentry xml:id="class.com" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>COM</refname>
  <refpurpose>COM sınıfı</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <synopsis>$obj = new <classname>COM</classname>("Uygulama.ID")</synopsis>
 </refsynopsisdiv>
 <refsect1 xml:id="class.com.class">
  <title>Tanım</title>
  <simpara>
   COM sınıfı, OLE uyumlu COM nesnesi başlatmaya, nesnenin yöntemlerine ve
   özelliklerine erişmeye olanak sağlar.
  </simpara>
 </refsect1>
 <refsect1 xml:id="class.com.constructor">
  <title>Yöntemler</title>
  <methodsynopsis>
   <type>com</type><methodname>COM::COM</methodname>
   <methodparam><type>string</type><parameter>modulAdi</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>sunucuAdi</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>kodSayfasi</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>turKitapligi</parameter></methodparam>
  </methodsynopsis>
  <para>
   COM sınıf yapılandırıcısı. Değiştirgelerin anlamları:
   <variablelist>
    <varlistentry>
     <term>modulAdi</term>
     <listitem>
      <simpara>
       Yüklenecek bileşen isimleri: ProgID, Sınıf ID veya Moniker olabilir.
      </simpara>
      <simpara>
       ProgID, tipik olarak uygulama veya DLL adı, "." nokta ve nesne adının
       birleşmesinden oluşur. Örneğin: <literal>Word.Application</literal>.
      </simpara>
      <simpara>
       Sınıf ID, bir sınıfı tekil olarak belirleyen UUID&apos;dır.
      </simpara>
      <simpara>
       Moniker, özel bir isimlendirme şeklidir, URL şema kavramına benzer,
       kaynağı tanımlar ve nasıl yüklenmesi gerektiğini belirler. Örnek
       olarak, Word uygulamasını yükleyebilir ve word belgesinin tam dosya
       yolunu, modül adı şeklinde vererek belgeyi temsil eden bir nesne
       alabilir veya <literal>LDAP:</literal> dizgesini moniker olarak
       kullanır ve LDAP için ADSI arayüzünü kullanabilirsiniz.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>sunucuAdi</term>
     <listitem>
      <simpara>
       Bileşenin yükleneceği ve çalıştırılacağı DCOM sunucu adı. Eğer &null;
       ise nesne, uygulama için öntanımlı olan yerel sunucu ile çalışacaktır
       fakat sistem yöneticisi başka bir sunucu üzerinde çalışacak şekilde
       ayarlayabilir.
      </simpara>
      <simpara>
       Sunucu için &null; olmayan bir değer verirseniz, PHP <xref
        linkend="ini.com.allow-dcom"/> ayar seçeneğini &true; olarak
       ayarlamadığınız sürece nesneyi yüklemeyi reddecektir.
      </simpara>
      <para>
       <parameter>sunucu_adi</parameter> bir dizi ise büyüklük duyarlı olarak
       aşağıdaki elemanları içermelidir. Hepsinin seçimlik olduğuna dikkat
       edin (seçimlik olsalarda Username ve Password birlikte verilmelidir);
       Sunucu (Server) ihmal edilirse yukarıda anlatıldığı gibi öntanımlı olan
       kullanılacaktır ve nesnenin başlatılması <xref
        linkend="ini.com.allow-dcom"/> ayarından etkilenmeyecektir.
       <table>
        <title>DCOM sunucu adı</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry><parameter>server_name</parameter> anahtarı</entry>
           <entry>tür</entry>
           <entry>tanım</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>Server</entry>
           <entry>string</entry>
           <entry>Sunucunun adı.</entry>
          </row>
          <row>
           <entry>Username</entry>
           <entry>string</entry>
           <entry>Bağlanacak kullanıcı adı.</entry>
          </row>
          <row>
           <entry>Password</entry>
           <entry>string</entry>
           <entry><parameter>Username</parameter> için parola.</entry>
          </row>
          <row>
           <entry>Flags</entry>
           <entry>integer</entry>
           <entry>Aşağıdaki sabitlerden biri veya birleşimleri, mantıksal OR
            ile birleşirler:
            <constant>CLSCTX_INPROC_SERVER</constant>,
            <constant>CLSCTX_INPROC_HANDLER</constant>,
            <constant>CLSCTX_LOCAL_SERVER</constant>,
            <constant>CLSCTX_REMOTE_SERVER</constant>,
            <constant>CLSCTX_SERVER</constant> ve
            <constant>CLSCTX_ALL</constant> belirtilmedi ise,
            <parameter>Server</parameter> değiştirgesi ihmal edilirse,
            öntanımlı değer <constant>CLSCTX_SERVER</constant>&apos;dir veya
            bir sunucu belirtirseniz <constant>CLSCTX_REMOTE_SERVER</constant>
            değeridir. Bu sabitlerin anlamları hakkında daha fazla bilgi için
            Microsoft CoCreateInstance belgesine bakınız; genelde
            hiçbir zaman bunları kullanmak zorunda kalmazsınız.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>kodSayfasi</term>
     <listitem>
      <simpara>
       Evrensel dizgelere ve evrensel dizgelerden yapılacak dönüşümlerde
       kullanılacak kod sayfasını belirtir. Dönüşüm, COM nesnesinin
       yöntemlerinden birine geçirilen dizge değiştirgeye ve yöntemden geri
       dönen dizgelere uygulanır. Kod sayfası PHP 5&apos;de yapışkandır, bunun
       anlamı nesnelere ve nesnelerden dönen varyantlara geçecektir.
      </simpara>
      <simpara>
       Olası değerler,
       <constant>CP_ACP</constant> (sistemde öntanımlı ANSI kod
       sayfasını kullan - eğer değiştirge ihmal edilirse alınacak değerdir),
       <constant>CP_MACCP</constant>,
       <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
       <constant>CP_THREAD_ACP</constant> (O an çalışan evre için kod
       sayfası/yerel ayarını kullan),
       <constant>CP_UTF7</constant> ve <constant>CP_UTF8</constant>. Seçilen
       kod sayfası için sayı da kullanabilirsiniz, kod sayfaları ve sayısal
       değerleri hakkında daha ayrıntılı bilgi için Microsoft belgelerine bakınız.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 xml:id="class.com.overloadedmethods">
  <title>Aşırı Yüklenmiş Yöntemler</title>
  <para>
   Geri dönen nesne aşırı yüklenmiş bir nesnedir, bunun anlamı PHP düzenli
   sınıflarda gördüğü herhangi bir durağan yöntemi görmeyecektir; bunun
   yerine herhangi bir özellik veya yönteme erişim COM vasıtası ile
   gerçekleşecektir.
  </para>
  <para>
   PHP 5&apos;den itibaren, PHP özdevinimli olarak, değiştirgeleri gönderim
   vasıtası ile kabul eden yöntemleri bulmaya ve düzenli değişkenleri
   gönderim vasıtası ile geçirilecek şekilde çevirmeye başlamıştır. Bunun
   anlamı doğal olarak bir yöntemi çağırabilirsiniz; kodunuzda fazladan bir
   çalışma yapmak zorunda değilsiniz.
  </para>
  <para>
   PHP 4&apos;de değiştirgeleri gönderimli geçirebilmek için <xref
    linkend="class.variant"/> sınıfı ile sarmalayarak bir nesne örneği
   oluşturmalısınız.
  </para>
 </refsect1>

 <refsect1 xml:id="class.com.falsemethods">
  <title>Taklit Yöntemler</title>
  <para>
   PHP 5&apos;den önceki sürümlerde, aşağıdaki bazı yöntemler COM&apos;a
   geçirilmiyordu ve pek uygun olmayan yöntemler ile PHP&apos;nin kendi içinde
   çalıştırılıyordu. PHP 5&apos;de bunlar kaldırılmıştır; betiklerinizi nasıl
   düzelteceğinizi bulmak için aşağıda verilen ayrıntıları okuyun. Bu sihirli
   yöntem isimleri harf büyüklüğüne duyarsızdır.
  </para>
  <methodsynopsis>
   <type>void</type><methodname>COM::AddRef</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   Yapay olarak COM nesnesine bir gönderim sayısı ekler.
  </simpara>
  <warning>
   <simpara>
    Bu yöntemi kullanmaya ihtiyacınız olmaması gerekir. Aşağıdaki
    Release() yönteminin mantıksal tamamlayıcısıdır.
   </simpara>
  </warning>
  <methodsynopsis>
   <type>void</type><methodname>COM::Release</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   Yapay olarak COM nesnesinden bir gönderim sayısı siler.
  </simpara>
  <warning>
   <simpara>
    Bu yöntemi kullanmaya ihtiyacınız olmaması gerekir. Bu yöntem
    varlığını, COM nesnelerini çalışmaları gerekenden daha fazla çalışır tutan
    bir yazılım hatasına borçludur.
   </simpara>
  </warning>
 </refsect1>
 <refsect1 xml:id="class.com.iteratormethods">
  <title>Yineleme için Taklit Yöntemler</title>
  <para>
   Bu yöntemler, <function>com_isenum</function> işlevi &true; döndürüyorsa
   ulaşılabilirdir, COM nesnesi tarafından sağlanan aynı isimdeki herhangi bir
   yöntemi gizleyebilirler, PHP 5 ile birlikte bu yöntemlerin hepsi
   çıkartılmıştır, yerine <xref linkend="com.examples.foreach"/>
   kullanmalısınız.
  </para>
  <methodsynopsis>
   <type>variant</type><methodname>COM::All</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   10 elemanlı bir SafeArray&apos;ı temsil eden bir varyant döndürür; her
   eleman empty/null varyant olabilir. Bu işlev, yineleyiciden bütün elemanları
   içeren bir dizi döndürmek için planlanmıştır fakat tamamlanmamıştır.
   Yani, bu işlevi kullanmayın.
  </simpara>
  <methodsynopsis>
   <type>variant</type><methodname>COM::Next</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   Yineleyiciden sonraki elemanı temsil eden bir varyant döndürür veya daha
   fazla eleman kalmadıysa &false; döndürür.
  </simpara>
  <methodsynopsis>
   <type>variant</type><methodname>COM::Prev</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   Yineleyiciden önceki elemanı temsil eden bir varyant döndürür veya daha
   fazla eleman kalmadığı zaman &false; döndürür.   
  </simpara>
  <methodsynopsis>
   <type>void</type><methodname>COM::Reset</methodname>
   <void/>
  </methodsynopsis>
  <simpara>
   Yineleyiciyi tekrar başa sarar.
  </simpara>
 </refsect1>
 <refsect1 xml:id="class.com.examples">
  <title>COM örnekleri</title>
  <para>
   <example xml:id="example.com1">
    <title>COM örneği (1)</title>
    <programlisting role="php">
<![CDATA[
<?php
//word başlatılıyor
$word = new COM("word.application") or die("Unable to instantiate Word");
echo "Loaded Word, version {$word->Version}\n";

//görünür hale getir
$word->Visible = 1;

//boş bir belge aç
$word->Documents->Add();

//bir şeyler yaz/sakla 
$word->Selection->TypeText("This is a test...");
$word->Documents[1]->SaveAs("Useless test.doc");

//kapat
$word->Quit();

//nesneyi serbest birak
$word = null;
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example xml:id="example.com2">
    <title>COM örneği (2)</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = new COM("ADODB.Connection") or die("Cannot start ADO");
$conn->Open("Provider=SQLOLEDB; Data Source=localhost;
Initial Catalog=database; User ID=user; Password=password");

$rs = $conn->Execute("SELECT * FROM sometable");    // Recordset

$num_columns = $rs->Fields->Count();
echo $num_columns . "\n";

for ($i=0; $i < $num_columns; $i++) {
    $fld[$i] = $rs->Fields($i);
}

$rowcount = 0;
while (!$rs->EOF) {
    for ($i=0; $i < $num_columns; $i++) {
        echo $fld[$i]->value . "\t";
    }
    echo "\n";
    $rowcount++;            // rowcount'u arttır
    $rs->MoveNext();
}

$rs->Close();
$conn->Close();

$rs = null;
$conn = null;

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
